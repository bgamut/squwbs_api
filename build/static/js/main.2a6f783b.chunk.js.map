{"version":3,"sources":["WholeContext.js","components/Form.js","components/List.js","components/Header.js","components/Todo.js","components/Home.js","components/NoMatch.js","components/NavBar.js","components/Map.js","components/RouterElement.js","App.js","serviceWorker.js","index.js"],"names":["WholeContext","createContext","Form","state","text","_this2","this","dispatch","context","react_default","a","createElement","onSubmit","e","preventDefault","type","setState","value","onChange","target","React","PureComponent","contextType","List","_useContext","useContext","todos","ScrollView","style","flex","map","_ref","i","complete","key","onClick","textDecoration","styles","StyleSheet","create","headerContainer","backgroundColor","width","height","header","padding","paddingVertical","alignItems","flexDirection","minHeight","headerCenter","order","headerLeft","headerRight","title","fontSize","fontWeight","textAlign","color","Header","onBack","Animated","View","id","Text","accessibilityRole","Todo","Form_Form","Home","NoMatch","NavBar","react_router_dom","to","href","MAPBOX_ACCESS_TOKEN","fetch","credentials","then","resulst","json","console","log","catch","err","initialViewState","longitude","latitude","zoom","pitch","bearing","data","sourcePosition","targetPosition","Map","props","layers","LineLayer","deckgl","viewState","controller","esm","mapboxApiAccessToken","RouterElement","react_router","exact","path","component","components_NavBar","Component","todoReducer","action","unshift","Boolean","window","location","hostname","match","ReactDOM","render","reducer","initialState","_useImmerReducer","useReducer","produce","_useImmerReducer2","Object","slicedToArray","Provider","components_Header","components_RouterElement","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2a6f783b.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nexport const WholeContext = createContext({});","import React, {useState} from 'react'\nimport {WholeContext} from \"../WholeContext\"\n// export default function Form(props){\n//     const [value, setValue]=useState('');\n\n//     function handleAdd(e){\n//         e.preventDefault();\n//         props.onAdd(value);\n//     }\n//     function handleChange(e){\n//         setValue(e.target.value)\n//     }\n//     return(\n//         <form>\n//             <input\n//                 type = 'text'\n//                 placeholder='Add Todo'\n//                 value={value}\n//                 onChange={handleChange}\n//             />\n//             <button onClick={handleAdd}>Add</button>\n//         </form>\n//     )\n// }\nexport default class Form extends React.PureComponent {\n    static contextType = WholeContext;\n  \n    state = {\n      text: \"\"\n    };\n  \n    render() {\n      const { text } = this.state;\n      const { dispatch } = this.context;\n  \n      return (\n        <form\n          onSubmit={e => {\n            e.preventDefault();\n            dispatch({ text, type: \"ADD_TODO\" });\n            this.setState({ text: \"\" });\n          }}\n        >\n          <input\n            value={text}\n            onChange={e => this.setState({ text: e.target.value })}\n          />\n          <submit>Add</submit>\n        </form>\n      );\n    }\n  }","//import React,{useState, useEffect} from 'react'\nimport React, { useContext } from \"react\";\nimport {WholeContext} from \"../WholeContext\"\nimport {ScrollView} from 'react-native'\n// function ListItem(props){\n//     const[checked, setChecked]=useState(false);\n//     useEffect(()=>{\n//         if(checked){\n//             const timeoutHandle = setTimeout(props.onDelete,3000)\n//             return ()=>{\n//                 clearTimeout(timeoutHandle);\n//             }\n//         }\n//     },[checked])\n//     function handleCheckChange(e){\n//         //console.log(e)\n//         setChecked(e.target.checked)\n//     }\n//     const style = checked ? {\n//         textDecoration: 'line-through'\n//     }:{};\n//     return(\n//         <div className='list__item'>\n//             <input type='checkbox' onChange={handleCheckChange}/>\n//             <span style={style}>{props.text}</span>\n//         </div>\n//     )\n// }\n// export default function List(props){\n//     return(\n//         <div className='list'>\n//             {props.items.map(item=>(\n//                 <ListItem key={item.id}\n//                 onDelete={props.onDelete.bind(null,item.id)}\n//                 text={item.text}\n//                 />\n//             ))}\n//         </div>    \n//     )\n// }\nexport default () => {\n    const { todos, dispatch } = useContext(WholeContext);\n  \n    return (\n      <div>\n          <ScrollView style={{flex:1}}>\n        {todos.map(({ text, complete }, i) => (\n          <div\n            key={text}\n            onClick={() => dispatch({ type: \"TOGGLE_COMPLETE\", i })}\n            style={{\n              textDecoration: complete ? \"line-through\" : \"\"\n            }}\n          >\n            {text}\n          </div>\n        ))}\n        </ScrollView>\n      </div>\n    );\n  };","import React from 'react';\nimport {SafeAreaView, View, Text, StyleSheet,Animated} from 'react-native';\nimport '../css/header.css'\n\nvar header_max_height = 120\nvar header_min_height = 22\nvar profile_max_height = 80\nvar profile_min_height = 13\nconst Header = ({ onBack, title }) => (\n    <Animated.View id='titleBar' style={styles.headerContainer}>        \n        <Text accessibilityRole=\"heading\" id='title' style={styles.header}>{title}</Text>\n    </Animated.View>\n);\n\nconst styles = StyleSheet.create({\n    headerContainer: {\n    backgroundColor:'#333333',\n    width:'100vw',\n    height:'22px',\n    flex:1\n    },\n    header: {\n    padding: 10,\n    paddingVertical: 5,\n    alignItems: 'center',\n    flexDirection: 'row',\n    minHeight: 50\n    },\n    headerCenter: {\n    flex: 1,\n    order: 2\n    },\n    headerLeft: {\n    order: 1,\n    width: 80\n    },\n    headerRight: {\n    order: 3,\n    width: 80\n    },\n    title: {\n    fontSize: 19,\n    fontWeight: '600',\n    textAlign: 'center',\n    color: 'white'\n    },\n});\n\nexport default Header;\n","import React, {useReducer,useState,useEffect} from 'react'\nimport Form from './Form'\nimport List from './List'\nimport Header from './Header'\n// var i=1\n//  export default function Todo(props){\n\n//   console.log(props.items)\n//   const [items, setItems]=useState(props.items);\n\n  \n//   useEffect(()=>{\n//     props.itemsChanged(items);\n\n//   },[items])\n//   function handleOnAdd(value){\n//     setItems([...items,\n//         {\n//           id:i++,\n//           text:value\n//         } \n//       ])\n      \n    \n//   }\n//   function handleOnDelete(id){\n   \n//     const index=items.findIndex((item)=>item.id===id);\n//       if(index !== -1){\n//         items.splice(index, 1)\n//         setItems(\n//           [\n//             ...items\n//           ]\n//         )\n//       }\n//   }\n  \n//    return(\n//     <div className='todo'>\n//       <Form onAdd = {handleOnAdd}/>\n//       <List items = {items} onDelete={handleOnDelete}/>\n//     </div>\n//    )\n   \n//   /*\n//   return(\n//     <div className='todo'>\n//       <Header/>\n//     </div>\n//    )\n//    */\n//  }\nexport default () => {\n  return (\n    <div>\n      <Form />\n      <List />\n    </div>\n  );\n};","import React from 'react'\n\nconst Home = () => (\n  <div>\n    Home\n  </div>\n)\n\nexport default Home\n","import React from 'react'\n\nconst NoMatch = () => (\n  <div>\n    No Match\n  </div>\n)\n\nexport default NoMatch\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport {ScrollView} from 'react-native'\nconst NavBar = () => (\n  <div>\n    <div>\n      <ScrollView style={{flex:1}}>\n        <Link id=\"linkHome\" to=\"/\">Home</Link><br/>\n        <Link id=\"linkTodo\" to=\"/todo\">todo</Link><br/>\n        <Link id=\"linkMap\" to=\"/map\">map</Link><br/>\n        <a id=\"linkhome\" href=\"/home\">login</a><br/>\n      </ScrollView>\n    </div>\n  </div>\n)\nexport default NavBar\n","import React from 'react'\nimport DeckGL from '@deck.gl/react'\nimport {LineLayer} from '@deck.gl/layers'\nimport {StaticMap} from 'react-map-gl'\n//var vari = require('../expressServer/keysconfig');\n//console.log(process.env.NODE_ENV)\n//console.log(\"MAPBOX : \"+process.env.MAPBOX_ACCESS_TOKEN)\n//const MAPBOX_ACCESS_TOKEN = vari.MAPBOX_ACCESS_TOKEN\n//const MAPBOX_ACCESS_TOKEN='pk.eyJ1IjoiYmdhbXV0IiwiYSI6ImNqd2hnMjAzdDFranI0M25wNnA1ZHEwanIifQ.cKnGSJ4UAFehcj43UU_lRA'\n//const MAPBOX_ACCESS_TOKEN = process.env.MAPBOX_ACCESS_TOKEN\n//const MAPBOX_ACCESS_TOKEN = \"MAPBOX_ACCESS_TOKEN_STRING\"\nlet MAPBOX_ACCESS_TOKEN=\"\"\nfetch('https://squwbs.herokuapp.com/mapboxtoken', {\n    credentials: \"include\"\n  })\n.then(resulst=>{\n  return resulst.json()\n})\n.then((json)=>{\nMAPBOX_ACCESS_TOKEN=json.MAPBOX_ACCESS_TOKEN\nconsole.log(json)\n})\n.catch((err)=>{\n\n})\nconst initialViewState={\n    longitude: -122.41669,\n    latitude:37.7853,\n    zoom:13,\n    pitch:0,\n    bearing:0\n}\nconst data = [{sourcePosition:[-122.41669,37.7853],targetPosition:[-122.41669,37.781]}]\nexport default function Map (props){\n    const layers=[\n        new LineLayer({id:'line-layer',data})\n    ]\n\n    return(\n        <DeckGL \n            viewState={initialViewState} \n            controller={true}\n            layers={layers} >\n        <StaticMap mapboxApiAccessToken={MAPBOX_ACCESS_TOKEN}/>\n        </DeckGL>\n    )\n    // return(\n    //     <DeckGL \n    //         viewState={initialViewState} \n    //         controller={true}\n    //         layers={layers} >\n    //     <StaticMap mapboxApiAccessToken={props.mapbox_access_token}/>\n    //     </DeckGL>\n    // )\n    \n}","import React, { Component } from 'react';\nimport { BrowserRouter,HashRouter, Route, Link,Router,Switch } from \"react-router-dom\";\nimport NavBar from './NavBar'\nimport Todo from './Todo'\nimport Home from './Home'\nimport NoMatch from './NoMatch'\nimport Map from './Map'\n// class RouterElement extends Component {\n//     render() {\n//         return (\n//             <BrowserRouter>\n//                 <Switch>\n//                     <Route exact path=\"/\" component={Home} />\n//                     <Route exact path=\"/todo\" render={()=><Todo itemsChanged={handleItems} items={state.items}/>}>\n//                     </Route>\n//                     <Route exact path=\"/map\" component={Map}/>\n//                     <Route component={NoMatch} />\n//                 </Switch>\n//                 <NavBar />\n//             </BrowserRouter>\n//         );\n//     }\n// }\nclass RouterElement extends Component {\n    render() {\n        return (\n            <BrowserRouter>\n                <Switch>\n                    <Route exact path=\"/\" component={Home} />\n                    <Route exact path=\"/todo\" component={Todo}/>\n                    <Route exact path=\"/map\" component={Map}/>\n                    <Route component={NoMatch} />\n                </Switch>\n                <NavBar />\n            </BrowserRouter>\n        );\n    }\n}\nexport default RouterElement;"," \n import React, {useReducer,useState,Component} from 'react'\n import Todo from './components/Todo'\n import './App.css'\n import Header from './components/Header';\n import { BrowserRouter,HashRouter, Route, Link,Router,Switch } from \"react-router-dom\";\n //import{IndexRedirect} from \"react-router\"\n import Home from './components/Home'\n import NoMatch from './components/NoMatch'\n import NavBar from './components/NavBar'\n import Map from './components/Map'\n import RouterElement from './components/RouterElement'\n //import {name} from '/package.json'\n //var envs = require('./expressServer/keysconfig');\n//console.log(envs)\n//var dotenv= require('dotenv') ;\n//const result = dotenv.config();\n//console.log(dotenv.parse())\nimport {produce} from \"immer\"\nimport {WholeContext} from './WholeContext'\n//  var i=1\n// const object=React.createContext({})\n// class App extends Component{\n\n//   constructor(props){\n//     super(props)\n//     this.state={\n//       items:[],\n//     }\n//     this.handleItems=(items)=>{\n//       this.setState({items:[...items]})\n//     }\n//   }\n//   // const [state, setState]=useState(\n//   //   {items:[],\n//   //   }\n//   // )\n//   // function handleItems(items){\n//   //   setState({items:[...items]})\n//   //   console.log(state)\n//   // }\n//   render(){\n//     return (\n//     <div>\n//       <Header title = 'template'/>\n//       <RouterElement/>\n//     </div>\n//     );\n//   }\n    \n//   }\n//   export default App\nfunction useImmerReducer(reducer, initialState)\n{\n  return React.useReducer(produce(reducer),initialState);\n}  \nconst todoReducer=(todos, action)=>{\n  switch (action.type) {\n    case \"ADD_TODO\":\n      todos.unshift({ text: action.text, complete: false });\n      return;\n    case \"TOGGLE_COMPLETE\":\n      todos[action.i].complete = !todos[action.i].complete;\n      return;\n    case \"RESET\":\n      return [];\n    default:\n      return todos;\n  }\n}\nexport default () => {\n  const [todos, dispatch] = useImmerReducer(todoReducer, []);\n\n  return (\n    <WholeContext.Provider value={{ todos, dispatch }}>\n      <Header title = 'template'/>\n      <RouterElement/>\n    </WholeContext.Provider>\n  );\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
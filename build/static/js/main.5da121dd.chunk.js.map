{"version":3,"sources":["context.js","components/Header.js","components/HorizontalSwipeElements.js","components/SwipeableCard.js","components/SwipeableList.js","components/Swiper.js","components/SwipeableScroller.js","components/AddPost.js","components/Home.js","components/Posts.js","actions/postActions.js","components/screens/CatalogueScreen.js","components/screens/CategoryScreen.js","components/screens/ProductScreen.js","components/Navigator.js","components/screens/SearchScreen.js","components/screens/SearchResultsScreen.js","components/screens/BagScreen.js","components/NavBar.js","components/Form.js","components/Todo.js","components/NoMatch.js","components/RouterElement.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","ContextController","_ref","children","intialState","posts","random","yscroll","headerHeight","loading","data","page","seed","error","refreshing","closedIndices","index","dataManipulated","filteredData","dy","Animated","Value","horizontalscroll","_useState","useState","_useState2","Object","slicedToArray","state","setState","react_default","a","createElement","Provider","value","name","require","Header","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","maxheight","scroller","createRef","lastscroll","opacity","height","addListener","console","log","nextProps","limit","_ref2","View","style","marginBottom","backgroundColor","alignItems","justifyContent","borderColor","borderRadius","color","defineProperty","Text","pStyle","PureComponent","_divStyle","margin","flexDirection","flex","fontSize","textShadowColor","textShadowOffset","width","textShadowRadius","styles","Dimensions","get","StyleSheet","create","container","sliderContainer","overflow","position","controlsWrapperStyle","right","bottom","padding","dotsWrapperStyle","activeDotStyle","marginLeft","marginRight","marginTop","dotStyle","prevButtonStyle","nextButtonStyle","Component","SwipeableCard","_useContext","useContext","_useContext2","dragPos","ValueXY","x","y","_panResponder","PanResponder","onMoveShouldSetResponderCapture","onMoveShouldSetPanResponderCapture","onPanResponderMove","e","gestureState","setValue","dx","onPanResponderRelease","vx","screenWidth","Math","abs","sequence","spring","toValue","duration","start","itemIndex","filtered","filter","item","objectSpread","toConsumableArray","dismiss","bounciness","assign","left","panHandlers","TouchableOpacity","onPress","Image","source","uri","picture","selectable","String","name_first","name_last","email","DefaultFlatList","useEffect","url","concat","fetch","then","res","json","copy","results","indexed","i","length","catch","makeRemoteRequest","UIManager","setLayoutAnimationEnabledExperimental","borderTopWidth","borderBottomWidth","FlatList","renderItem","components_SwipeableCard","first","last","thumbnail","keyExtractor","scrollEventThrottle","onEndReachedThreshold","Swiper","activeIndex","pan","_animatedValueX","_animatedValueY","onPanResponderTerminationRequest","swipingEnabled","onAnimationStart","allow","direction","stopAutoplay","onPanResponderGrant","_fixState","event","gesture","correction","moveX","x0","moveY","y0","startAutoplay","actionMinWidth","onAnimationEnd","_changeIndex","_this2","removeAllListeners","_this3","autoplayTimeout","autoplay","setTimeout","moveUpDown","clearTimeout","down","arguments","undefined","setOffset","_this4","delta","move","skipChanges","calcDelta","loop","count","onIndexChanged","_this5","_event$nativeEvent$la","nativeEvent","layout","_this6","_this$state","_this$props","containerStyle","swipeAreaStyle","swipeWrapperStyle","dotElement","activeDotElement","prevButtonElement","prevButtonText","nextButtonElement","nextButtonText","buttonsEnabled","onLayout","_onLayout","bind","overRangeButtonsOpacity","Array","isArray","top","transform","translateX","translateY","map","el","key","disabled","defaultProps","SwipeableScroller","onScroll","contentOffset","scroll","components_Header","ref","header","ScrollView","scrollEnabled","paddingRight","paddingLeft","Swiper_Swiper","SwipeableList","AddPost","addTodo","text","alert","borderWidth","TextInput","className","editable","autoCorrect","blurOnSubmit","maxLength","multiline","numberOfLines","caretHidden","onChangeText","keyboardType","onChange","userInput","target","inputType","onSubmitEditing","returnKeyType","clearButtonMode","autoFocus","theme","colors","placeholder","primary","underlineColor","background","type","paddingBottom","Home","components_SwipeableScroller","KeyboardAvoidingView","behavior","enabled","felxDirection","components_AddPost","horizontal","Posts","newPost","unshift","postItems","post","connect","items","fetchPosts","dispatch","payload","CatalogueScreen","nextState","prevProps","prevState","react_router_dom","id","to","CategoryScreen","ProductScreen","Nav","createSwitchNavigator","catalogue","category","product","defaultNAvigationOptions","headerStyle","Navigator","createBrowserApp","memo","box","_box","touch","link","textDecorationLine","NavBar","textAlign","Form","assertThisInitialized","onSubmit","preventDefault","addPost","Post","material","Todo_Post","meterial","Todo","Todo_Posts","components_Form","RouterElement","react_router","exact","path","component","Map","NoMatch","components_NavBar","Platform","select","ios","android","star","App","_value","vy","SafeAreaView","components_RouterElement","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5da121dd.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {Animated} from \"react-native\"\nexport const Context = React.createContext();\n\n\nexport function ContextController({ children }) {\n  let intialState = {\n    posts: [],\n    //data:[[0,1],[1,2]],\n    random: \"\",\n    //yscroll: new Animated.Value(0),\n    yscroll:0,\n    headerHeight:22,\n    loading: true,\n    data: [],\n    page: 1,\n    seed: 1,\n    error: null,\n    refreshing: false,\n    closedIndices:[],\n    index:0,\n    dataManipulated:false,\n    filteredData:[],\n    dy: new Animated.Value(0),\n    horizontalscroll:new Animated.Value(0)\n  };\n\n  const [state, setState] = useState(intialState);\n\n  return (\n    <Context.Provider value={[state, setState]}>{children}</Context.Provider>\n  );\n}","import React,{useContext,Component,PureComponent} from 'react'; \n//import {WholeContext} from \"../WholeContext\"\nimport {Text,View,Animated} from 'react-native'\n//import MenuDrawer from 'react-native-side-drawer'\nimport {Context} from '../context'\nvar {name} =require( '../../package.json')\n\n\n\n\n\nclass Header extends PureComponent {\n    //const [state, setState] = useContext(Context);\n    maxheight=22\n    constructor(props) {\n        super(props);\n        this.scroller=React.createRef()\n        this.state = {\n            yscroll: new Animated.Value(0),\n            dy:new Animated.Value(0),\n            lastscroll:0,\n            opacity:new Animated.Value(1),\n            height:this.maxheight,\n            maxheight:this.maxheight\n        };\n        this.state.yscroll.addListener(({value})=>{\n            console.log(value)\n            // this.scroller.current.scrollTo({\n            //     y:-1*value\n            // })\n            //this.forceUpdate()\n            \n        })\n    }\n    \n    \n    //opacity= new Animated.Value(1)\n    // if(state.yscroll>22){\n    //     opacity=0\n    // }\n    UNSAFE_componentWillReceiveProps(nextProps){\n        //console.log(nextProps)\n        //this.setState({...this.state,height:nextProps.style.height})\n        var maxheight = this.state.maxheight\n        var limit=maxheight\n        \n        // console.log(height)\n        // console.log(height-nextProps.yscroll)\n        // console.log(height-nextProps.yscroll/height)\n        \n            this.setState({opacity:((limit-nextProps.yscroll)/limit),height:maxheight-(maxheight*(nextProps.yscroll/(limit*5)))})\n            //console.log(this.props.scrollValue)\n            //this.opacity.setValue((this.height-this.props.scrollValue._value)/this.height)\n        \n       // console.log(this.state)\n\n    }\n    \n    //console.log(opacity)\n    render(){\n        return(\n            <View style={\n                // divStyle\n                {\n                    marginBottom :2,\n                    //padding:1,\n                    height:this.state.height,\n                    backgroundColor:'#ffffff',\n                    alignItems:'center',\n                    justifyContent:'center',\n                    //flexDirection:'row',\n                    //flex:1,\n                    borderColor:'black',\n                    borderRadius:2,\n                    color:'black',\n                    borderColor:'#cfcfcf',\n                    borderWidth:1,\n                    opacity:this.state.opacity\n                }\n            }>        \n                <Text style ={pStyle} >\n                    {name}\n                    {/* {state.yscroll} */}\n                </Text>\n            </View>\n        \n        )\n    } \n};\n\nconst divStyle = {\n    margin:0,\n    //padding:1,\n    height:22,\n    backgroundColor:'#ffffff',\n    alignItems:'center',\n    justifyContent:'center',\n    flexDirection:'row',\n    flex:1,\n    borderColor:'black',\n    borderRadius:2,\n    color:'black',\n    borderColor:'#cfcfcf',\n    borderWidth:1\n};\n  const pStyle = {\n    color:'white',\n    fontSize: 12,\n    textShadowColor: 'rgba(128, 128, 128, 1)',\n    textShadowOffset: {width: 0, height: 0},\n    textShadowRadius: 8,\n    //textAlign: 'center',\n    // textShadowColor: 'rgba(1, 1, 1, 1)',\n    // textShadowOffset: {width: 0, height: 0},\n    // textShadowRadius: 20\n  };\n\n\nexport default (Header)","// import React, {memo,useContext} from 'react'\n// import {Text,View,Dimensions,ScrollView,PanResponder,Animated} from 'react-native'\n// import {Context} from '../context'\n\nimport React,{Component} from 'react'\nimport {\n  StyleSheet, \n  View, \n  ViewPropTypes,\n  Text,\n  Animated, \n  PanResponder,\n  TouchableOpacity,\n  Dimensions\n} from 'react-native'\nimport PropTypes from \"prop-types\"\nconst width = Dimensions.get('window').width\nconst height = Dimensions.get('window').height\nconst _animatedValue = new Animated.Value(0);\nconst styles = StyleSheet.create({\n  container: {\n      flex: 1,\n      backgroundColor: \"transparent\",\n  },\n  sliderContainer: {\n      backgroundColor: \"transparent\",\n      overflow: \"hidden\",\n      position: \"relative\",\n      flex: 1,\n  },\n  controlsWrapperStyle: {\n      position: \"absolute\",\n      alignItems: \"center\",\n      justifyContent: \"space-between\",\n      right: 0,\n      bottom: 0,\n      padding: 10\n  },\n  dotsWrapperStyle: {\n      alignItems: \"center\",\n      justifyContent: \"center\"\n  },\n  activeDotStyle: {\n      backgroundColor: '#007aff',\n      width: 8,\n      height: 8,\n      borderRadius: 4,\n      marginLeft: 3,\n      marginRight: 3,\n      marginTop: 3,\n      marginBottom: 3\n  },\n  dotStyle: {\n      backgroundColor: 'rgba(0,0,0,.2)',\n      width: 8,\n      height: 8,\n      borderRadius: 4,\n      marginLeft: 3,\n      marginRight: 3,\n      marginTop: 3,\n      marginBottom: 3\n  },\n  prevButtonStyle: {\n      color: '#777777'\n  },\n  nextButtonStyle: {\n      color: '#007aff'\n  },\n});\n\nexport default class HorizontalSwipeElements extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n        width: Dimensions.get('window').width,\n        height: 200,\n        activeIndex: props.index,\n        pan: new Animated.ValueXY(),\n    };\n    this._animatedValueX=0;  \n    this._animatedValueY=0;\n    this._panResponder = PanResponder.create({\n      onPanResponderTerminationRequest:()=>false,\n      onMoveShouldSetPanResponderCapture:()=>true,\n      onMoveShouldSetPanResponderCapture:(e,gestureState)=>{\n       return(Math.abs(gestureState.dx)>5)\n      },\n      onPanResponderGrant:(e,gestureState)=>{this._fixState()},\n      onPanResponderMove:Animated.event([\n        null, {dx:this.state.pan.x}\n      ]),\n      onPanResponderRelease:(e,gesture)=>{\n        const correction=gesture.moveX-gesture.x0\n        if(Math.abs(correction)<(this.state.width*this.props.actionMinWidth)){\n          return Animated.spring(this.state.pan,{toVlue:{x:0,y:0}}).start(()=>{\n            if(this.props.onAnimationEnd){\n              this.props.onAnimationEnd(this.state.activeIndex);\n            }\n          })\n          this._changeIndex(correction>0 ? -1 :1)\n        }\n      }\n    })\n  }\n  componentDidMount(){\n    this.state.pan.x.addListener((value)=> this._animatedValueX=value.value)\n    //this.startAutoplay()\n  }\n  componentWillUnmount(){\n    //this.stopAutoplay()\n    this.state.pan.x.removeAllListeners()\n  }\n  _fixState(){\n    this._animatedValueX=this.state.width*this.state.activeIndex*-1\n    this.state.pan.setOffset({x:this._animatedValueX, y:0})\n    this.state.pan.setValue({x:0,y:0})\n  }\n  _changeIndex(delta=1){\n    let move = {x:0,y:0}\n    let skipChange=(!delta)\n    let calcDelta = delta\n    if(this.state.activeIndex<=0 && delta<0){\n      skipChange=(!this.props.loop)\n      calcDelta = this.count+delta\n    } else if(this.state.activeIndex+1>=this.cound &&delta>0){\n      skipChange=(!this.props.loop)\n      calcDelta=-1*this.state.activeIndex+delta-1\n    }\n    if(skipChange){\n      return Animated.spring(this.state.pan,{toValue:move}).start(()=>{\n        if(this.props.onAnimationEnd){\n          this.props.onAnimationEnd(this.state.activeIndex)\n        }\n      })\n    }\n    let index = this.state.activeIndex+calcDelta\n    this.setState({activeIndex:index})\n    move.x=this.state.width*-1*calcDelta\n    Animated.spring(this.state.pan,{toValue:move}).start(()=>{\n      if(this.props.onAnimationEnd){\n        this.props.onAnimationEnd(index)\n      }\n    })\n    //this.startAutoplay();\n    this.props.onIndexChanged && this.props.onIndexChanged(index)\n  }\n  _onLayout(e){\n    console.log(e.nativeEvent.layout)\n    const {width,height}=e.nativeEvent.layout\n    this.setState({width,height},()=>this._fixState())\n  }\n\n  render(){\n    const {pan,width,height,activeIndex}=this.state\n    const {\n      direction,\n      containerStyle,\n      swipeAreaStyle,\n      swipeWrapperStyle,\n      controlsWrapperStyle,\n      dotsWrapperStyle,\n      dotElement,\n      dotStyle,\n      activeDotElement,\n      activeDotStyle,\n      prevButtonElement,\n      prevButtonStyle,\n      prevButtonText,\n      nextButtonElement,\n      nextButtonStyle,\n      nextButtonText,\n      loop,\n      buttonsEnabled,\n    } = this.props;\n    if (!width){\n      return (<View style={[styles.container, containerStyle]} onLayout={this._onLayout.bind(this)}/>)\n    }\n    const overRangeButtonOpacity = !loop? this.props.overRangeButtonOpacity: this.props.overRangeButtonsOpacity|| 1;\n    let {children}=this.props;\n    if(!Array.isArray(children)){children=[children]}\n    this.count=children.length\n    return(\n      <View style={[styles.container,containerStyle]} onLayout={this._onLayout.bind(this)}>\n        <View style={[styles.sliderContainer,swipeAreaStyle]}>\n          <Animated.View\n            style={[{\n              position:\"relative\",\n              top:0,\n              left:0,\n            },swipeWrapperStyle,{\n              flexDirection:direction,\n              width:width*this.count*width,\n              height:height\n            },{transform:[{translateX:pan.x},{translateY:pan.y}]}\n            ]}\n            {...this._panResponder.panHandlers}\n            >\n              {children.map((el,i)=>(<View key={i} style={{width,height}}>{el}</View>))}\n          </Animated.View>\n        </View>\n      </View>\n    )\n  }\n}\n//     <Animated.View style={{\n//       position: \"relative\",\n//       top: 0,\n//       //left: _animatedValue._value,\n//       flexDirection: 'row',\n//       width: width*2,\n//       height: height,\n//       transform:[{translateX:_animatedValue._value}]\n//       }}\n//       {..._panResponder.panHandlers} \n//       horizontal = {true}>\n// <View style={{height:Dimensions.get('window').height/15,width:(Dimensions.get('window').height)/12,backgroundColor:'white',flex:1,flexDirection:'column',marginRight:2,marginLeft:3}}>\n// <Text selectable={false}>one</Text>\n// </View>\n// <View style={{height:Dimensions.get('window').height/15,width:(Dimensions.get('window').height)/12,backgroundColor:'lightgrey',flex:1,flexDirection:'column',marginRight:2,marginLeft:2}}>\n// <Text selectable={false}>two</Text>\n// </View>\n// <View style={{height:Dimensions.get('window').height/15,width:(Dimensions.get('window').height)/12,backgroundColor:'darkgrey',flex:1,flexDirection:'column',marginRight:2,marginLeft:2}}>\n// <Text selectable={false}>three</Text>\n// </View>\n// <View style={{height:Dimensions.get('window').height/15,width:(Dimensions.get('window').height)/12,backgroundColor:'black',flex:1,flexDirection:'column',marginRight:2,marginLeft:2}}>\n// <Text selectable={false}>four</Text>\n// </View>\n// <View style={{height:Dimensions.get('window').height/15,width:(Dimensions.get('window').height)/12,backgroundColor:'white', flex:1,flexDirection:'column',marginRight:2,marginLeft:2}}>\n// <Text selectable={false}>one</Text>\n// </View>\n// <View style={{height:Dimensions.get('window').height/15,width:(Dimensions.get('window').height)/12,backgroundColor:'lightgrey',flex:1,flexDirection:'column',marginRight:2,marginLeft:2}}>\n// <Text selectable={false}>two</Text>\n// </View>\n// <View style={{height:Dimensions.get('window').height/15,width:(Dimensions.get('window').height)/12,backgroundColor:'darkgrey',flex:1,flexDirection:'column',marginRight:2,marginLeft:2}}>\n// <Text selectable={false}>three</Text>\n// </View>\n// <View style={{height:Dimensions.get('window').height/15,width:(Dimensions.get('window').height)/12,backgroundColor:'black',flex:1,flexDirection:'column',marginRight:2,marginLeft:2}}>\n// <Text selectable={false}>four</Text>\n// </View>\n// </Animated.View>\n//   )\n\n// }\n\n","import React,{Component,useContext} from 'react';\nimport {Animated,PanResponder,Dimensions,View,Text,Image,TouchableOpacity} from 'react-native'\nimport { Context } from \"../context\";\n\n// export class SwipeableCard extends Component {\n   \n//     translateX = new Animated.Value(0);\n//     _panResponder = PanResponder.create({\n//       onMoveShouldSetResponderCapture: () => true,\n//       onMoveShouldSetPanResponderCapture: () => true,\n//       onPanResponderMove: Animated.event([null, {dx: this.translateX}]),\n//       onPanResponderRelease: (e, {vx, dx}) => {\n//         //const [state, setState] = useContext(Context);\n\n//         const screenWidth = Dimensions.get(\"window\").width;\n//         if (Math.abs(vx) >= 0.5 || Math.abs(dx) >= 0.5 * screenWidth) {\n//           Animated.timing(this.translateX, {\n//             toValue: dx > 0 ? screenWidth : -screenWidth,\n//             duration: 200\n//           }).start(this.props.onDismiss);\n//           //console.log(\"yo this element's index was \"+this.props.name_first)\n//           //setState()\n//         } else {\n//           Animated.spring(this.translateX, {\n//             toValue: 0,\n//             bounciness: 10\n//           }).start();\n//         }\n//       }\n//     });\n//     onPress(){\n        \n//         //console.log(this.state)\n//     }\n//     render() {\n//     //const [state, setState] = useContext(Context);\n//       return (\n//         <View>\n//             <Animated.View\n//                 style={{transform: [{translateX: this.translateX}], height: 75}} {...this._panResponder.panHandlers}\n//             >\n//                 {/* <Text>\n//                     {this.props.title}\n//                 </Text> */}\n//                 <TouchableOpacity onPress={\n//                     console.log(this.props)\n                    \n//                 }>\n//                     <View \n//                     style={{\n//                         flex:1,\n//                         flexDirection:'row'\n//                     }}\n//                     >\n//                     <View>\n//                     <Image\n//                         style={{width: 50, height: 50}}\n//                         source={{uri: this.props.picture}}\n//                     />\n//                     </View>\n//                     <View>\n//                     <Text selectable={false}>\n//                         {String(this.props.name_first) +\" \" +String(this.props.name_last)}\n//                     </Text>\n//                     <Text selectable={false}>\n//                         {this.props.email}\n//                     </Text>\n//                     </View>\n//                     </View>\n//                 </TouchableOpacity>\n//             </Animated.View>\n//         </View>\n  \n//       );\n//     }\n//   }\n\nconst SwipeableCard = (props) => {\n    const [state, setState] = useContext(Context);\n    // const dismiss= (itemIndex)=>{\n    //   var filtered= []\n    //   var appliedIndex=0\n    //   for (var i = 0; i<state.data.length; i++){\n    //     if(itemIndex!=i){\n    //       filtered.push({...state.data[i],index:appliedIndex})\n    //       appliedIndex++\n    //     }\n    //   }\n\n    //   console.log(filtered)\n    //   setState({\n    //     ...state,\n    //     data:[...filtered]\n    //   })\n      \n    // }\n    const dismiss= (itemIndex)=>{\n      // console.log('dismiss fired')\n      // setState({\n      //   ...state,\n      //   refreshing:true\n      // })\n      \n      \n        // var filtered= []\n        // for (var i = 0; i<state.data.length; i++){\n        //   if(itemIndex!=i){\n        //     filtered.push({...state.data[i],index:i})\n        //   }\n        // }\n        //console.log(translateX)\n        \n        var filtered =state.filteredData.filter(item => item.index !== itemIndex);\n        // for (var i=0;i<filtered.length;i++){\n        //   filtered[i].index=i\n        // }\n        // console.log(filtered)\n        setState({\n          ...state,\n          filteredData:[...filtered],\n          dataManipulated:true,\n          refreshing:false\n        })\n        //console.log(state.filteredData)\n        \n    }\n    const style={\n      height:55,\n\n    }\n    //const [userInput,setUserInput,Refs] = useState(\"\")\n    const dragPos = new Animated.ValueXY({x:0,y:style.height});\n    const translateX = new Animated.Value(0);\n    const translateY=new Animated.Value(0)\n    const _panResponder = PanResponder.create({\n      onMoveShouldSetResponderCapture: () => true,\n      onMoveShouldSetPanResponderCapture: () => true,\n      onPanResponderMove: (e,gestureState)=>{\n        //translateX.setValue(gestureState.dx)\n        //Animated.event([null, {dx: translateX}])\n        dragPos.setValue({x:gestureState.dx,y:style.height})\n        //translateY.setValue(state.dy._value+gestureState.dy)\n        //console.log(translateX._value)\n        //console.log(position.x._value +\" : \"+position.y._value)\n        //setState({...state,dy:translateY})\n        //console.log(state.dy)\n      } ,\n      // onPanResponderRelease: (e, {vx, dx}) => {\n      //   //const [state, setState] = useContext(Context);\n      //   console.log(dx)\n      //   const screenWidth = Dimensions.get(\"window\").width;\n      //   if (Math.abs(vx) >= 0.5 || Math.abs(dx) >= 0.5 * screenWidth) {\n      //     Animated.timing(translateX, {\n      //       toValue: dx > 0 ? screenWidth : -screenWidth,\n      //       duration: 200\n      //     // }).start(props.onDismiss);\n      //   }).start(\n          \n      //     dismiss(props.index)\n          \n      //     );\n      //     //console.log(\"yo this element's index was \"+props.name_first)\n      //     //setState()\n      //   } else {\n      //     Animated.spring(translateX, {\n      //       toValue: 0,\n      //       bounciness: 10\n      //     }).start();\n      //   }\n      // }\n      onPanResponderRelease: (e, {vx, dx}) => {\n        //const [state, setState] = useContext(Context);\n        //console.log(dx)\n        const screenWidth = Dimensions.get(\"window\").width;\n        if (Math.abs(vx) >= 0.35 || Math.abs(dx) >= 0.35 * screenWidth) {\n          Animated.sequence([\n            Animated.spring(dragPos, {\n              toValue: dx > 0 ? {x:screenWidth,y:style.height} : {x:-screenWidth,y:style.height },\n              duration: 250\n              \n            // }).start(props.onDismiss);\n          }),\n          Animated.spring(dragPos,{\n            toValue: dragPos.x > 0 ?{x:screenWidth,y:0} : {x:-screenWidth,y:0},\n            // duration:750\n          }).start(\n            ()=>\n            {\n              dismiss(props.index)\n              // Animated.timing(position, {\n              //   toValue: dx > 0 ? {x:screenWidth,y:0} : {x:-screenWidth,y:0 },\n              //   duration: 200\n              // }).start()\n            }\n            \n          )\n            //console.log(\"yo this element's index was \"+props.name_first)\n            //setState()\n          ])\n          \n        } else {\n          Animated.spring(dragPos, {\n            toValue: {x:0,y:style.height},\n            bounciness: 10\n          }).start();\n        }\n      }\n    });\n        const onPress=(e)=>{\n            console.log(props)\n        }\n    \n      return (\n      \n            <View>\n                <Animated.View\n                    style={{left:dragPos.x,height:dragPos.y}} {..._panResponder.panHandlers}\n                >\n                    {/* <Text>\n                        {props.title}\n                    </Text> */}\n                    <TouchableOpacity onPress={\n                        onPress\n                        \n                    }>\n                        <View \n                        style={{\n                            flex:1,\n                            flexDirection:'row'\n                        }}\n                        >\n                        <View>\n                        <Image\n                            style={{width: 50, height: 50}}\n                            source={{uri: props.picture}}\n                        />\n                        </View>\n                        <View>\n                        <Text selectable={false}>\n                            {String(props.name_first) +\" \" +String(props.name_last)}\n                        </Text>\n                        <Text selectable={false}>\n                            {props.email}\n                        </Text>\n                        </View>\n                        </View>\n                    </TouchableOpacity>\n                </Animated.View>\n            </View>\n      \n          \n      );\n};\n    \nexport default SwipeableCard;","//modified from\n//https://medium.com/react-native-development/how-to-use-the-flatlist-component-react-native-basics-92c482816fe6\nimport React, { Component,pureComponent,memo ,useContext,useEffect} from \"react\";\nimport { View, Text, FlatList, ActivityIndicator ,Image, LayoutAnimation,UIManager} from \"react-native\";\nimport SwipeableCard from \"./SwipeableCard\";\n\n//import { List, ListItem, SearchBar } from \"react-native-elements\";\nimport { Context } from \"../context\";\n\n\n// class DefaultFlatList extends Component {\n//   constructor(props) {\n//     super(props);\n\n//     this.state = {\n//       loading: false,\n//       data: [],\n//       page: 1,\n//       seed: 1,\n//       error: null,\n//       refreshing: false,\n//       closedIndices:[],\n//       index:0\n//     };\n//   }\n\n//   componentDidMount() {\n//     this.makeRemoteRequest();\n//     UIManager.setLayoutAnimationEnabledExperimental && UIManager.setLayoutAnimationEnabledExperimental(true);\n  \n//   }\n\n//   makeRemoteRequest = () => {\n//     const { page, seed } = this.state;\n//     const url = `https://randomuser.me/api/?seed=${seed}&page=${page}&results=20`;\n//     this.setState({ loading: true });\n\n//     fetch(url)\n//       .then(res => res.json())\n//       .then(res => {\n//         //console.log(res.results)\n//         var copy =[...res.results]\n//         var indexed =[]\n//         for (var i =0; i<copy.length;i++){\n//           indexed[i]={...copy[i],index:i}\n//         }\n//         console.log(indexed)\n//         this.setState({\n//           //data: page === 1 ? res.results : [...this.state.data, ...res.results],\n//           data:[...this.state.data,...indexed],\n//           error: res.error || null,\n//           loading: false,\n//           refreshing: false\n//         });\n//       })\n//       .catch(error => {\n//         this.setState({ error, loading: false });\n//       });\n      \n//   };\n\n//   handleRefresh = () => {\n//     this.setState(\n//       {\n//         page: 1,\n//         seed: this.state.seed + 1,\n//         refreshing: true\n//       },\n//       () => {\n//         this.makeRemoteRequest();\n//       }\n//     );\n//   };\n\n//   handleLoadMore = () => {\n//     this.setState(\n//       {\n//         page: this.state.page + 1\n//       },\n//       () => {\n//         this.makeRemoteRequest();\n//       }\n//     );\n//   };\n\n//   renderSeparator = () => {\n//     return (\n//       <View\n//         style={{\n//           height: 1,\n//           width: \"86%\",\n//           backgroundColor: \"#CED0CE\",\n//           marginLeft: \"14%\"\n//         }}\n//       />\n//     );\n//   };\n\n//   renderHeader = () => {\n//     return <View><Text> note </Text></View>;\n//   };\n\n//   renderFooter = () => {\n//     if (!this.state.loading) return null;\n\n//     return (\n//       <View\n//         style={{\n//           paddingVertical: 20,\n//           borderTopWidth: 1,\n//           borderColor: \"#CED0CE\"\n//         }}\n//       >\n//         <ActivityIndicator animating size=\"large\" />\n//       </View>\n//     );\n//   };\n//   shouldRender(index) {\n//     return this.state.closedIndices.indexOf(index) === -1\n//     LayoutAnimation.configureNext(LayoutAnimation.Presets.spring);\n//   }\n  \n//   render() {\n//     // var filtered=[]\n//     // for (var i = 0; i<this.state.data.length; i++){\n//     //     filtered.push({...this.state.data[i],index:i})\n//     // }\n//     // this.setState({...this.state,data:filtered})\n//     if(this.state.loading==true||this.state.refreshing){\n//       return (\n//         <ActivityIndicator animating size=\"large\" color/>\n//       )\n//     }\n//     else{\n//       return (\n        \n//         <View style={{ \n//           borderTopWidth: 0, \n//           borderBottomWidth: 0, \n//           }}>\n         \n             \n//               <FlatList\n                \n//                 data={this.state.data}\n//                 renderItem={({ item }) => (\n//                   // <View \n//                   //   style={{\n//                   //     flex:1,\n//                   //     flexDirection:'row'\n//                   //   }}\n//                   // >\n//                   //   <View>\n//                   //   <Image\n//                   //     style={{width: 50, height: 50}}\n//                   //     source={{uri: item.picture.thumbnail}}\n//                   //   />\n//                   //   </View>\n//                   //   <View>\n//                   //   <Text>\n//                   //     {String(item.name.first) +\" \" +String(item.name.last)}\n//                   //   </Text>\n//                   //   <Text>\n//                   //     {item.email}\n//                   //   </Text>\n//                   //   </View>\n//                   // </View>\n                  \n                  \n//                   //https://stackoverflow.com/questions/53655722/react-native-flatlist-conditional-rendering\n//                   //flatlist seems to not support conditional rendering\n  \n//                   // <SwipeableCard title={String(item.name.first) +\" \" +String(item.name.last)} onDismiss={() => {\n//                   <SwipeableCard index={item.index} name_first={String(item.name.first)} name_last = {String(item.name.last)} picture={item.picture.thumbnail} email={item.email}  onDismiss={() => { \n//                     // if ([...new Array(this.state.data.length)].slice(i + 1, this.state.data.length).some(this.shouldRender)) {\n//                     //   LayoutAnimation.configureNext(LayoutAnimation.Presets.spring);\n//                     // }\n                    \n//                     //LayoutAnimation.configureNext(LayoutAnimation.Presets.spring);\n//                     // var filtered=this.state.data.filter(function(value, index, arr){\n//                     //   console.log(value)\n//                     //   return value.index != index;\n//                     // });\n//                     this.setState({\n//                       ...this.state,\n//                       refreshing:true\n//                     })\n//                     var filtered= []\n                    \n//                     for (var i = 0; i<this.state.data.length; i++){\n//                       if(item.index!=i){\n//                         filtered.push({...this.state.data[i],index:i})\n//                       }\n         \n//                     }\n//                     this.setState({\n//                       //closedIndices: [...this.state.closedIndices, i]\n//                       ...this.state,\n//                       data:[...filtered]\n//                     })\n//                     this.setState({\n//                       ...this.state,\n//                       refreshing:false\n//                     })\n//                     // filtered=[]\n//                     // for (var i = 0; i<this.state.data.length; i++){\n                      \n//                     //   filtered.push(this.state.data[i].name.first)\n                      \n//                     // }\n//                     //console.log(filtered)\n//                     //this.forceUpdate()\n//                     //console.log(this.state.data)\n//                   }}/>\n//                 )}\n//             keyExtractor={item => item.index}\n//             //ItemSeparatorComponent={this.renderSeparator}\n//             //ListHeaderComponent={this.renderHeader}\n//             //ListFooterComponent={this.renderFooter}\n//             scrollEventThrottle={16}\n//             onRefresh={this.handleRefresh}\n//             refreshing={this.state.refreshing}\n//             //onEndReached={this.handleLoadMore}\n//             onEndReachedThreshold={50}\n//           />\n//         </View>\n//       );\n//     }\n    \n//   }\n// }\n\n// export default DefaultFlatList;\n\n\n\nconst DefaultFlatList =(props)=> {\n  const [state, setState] = useContext(Context);\n\n  useEffect(()=>{\n    \n    const makeRemoteRequest = (seed,page) => {\n        const url = `https://randomuser.me/api/?seed=${seed}&page=${page}&results=20`;\n        //setState({ loading: true });\n    \n        fetch(url)\n          .then(res => res.json())\n          .then(res => {\n            //console.log(res.results)\n            var copy =[...res.results]\n            var indexed =[]\n            for (var i =0; i<copy.length;i++){\n              indexed[i]={...copy[i],index:i}\n            }\n          \n            setState({\n              //data: page === 1 ? res.results : [...state.data, ...res.results],\n              ...state,\n              data:[...state.data,...indexed],\n              filteredData:[...state.data,...indexed],\n              error: false,\n              loading: false,\n              refreshing: false\n            });\n          })\n          .catch(error => {\n            setState({ ...state,error:true, loading: false });\n          });\n        console.log('some how this ran')    \n    };\n    // console.log('useEffect fired in defaultFlatlist')\n    const { seed, page } = state;\n    if(state.loading==true){\n      var data = makeRemoteRequest(seed,page)\n      setState({...state,data:data})\n      console.log('if part fired')\n    }\n    else{\n      console.log(state.data)\n      console.log('else part is fired')\n    }\n    UIManager.setLayoutAnimationEnabledExperimental && UIManager.setLayoutAnimationEnabledExperimental(true);\n  },[])\n  \n  \n\n  \n\n  const handleRefresh = () => {\n    // setState(\n    //   {\n    //     ...state,\n    //     page: 1,\n    //     seed: state.seed + 1,\n    //     refreshing: true\n    //   },\n    //   () => {\n    //     //makeRemoteRequest();\n    //   }\n    // );\n    console.log('refresh fired')\n  };\n\n  const handleLoadMore = () => {\n    setState(\n      {\n        page: state.page + 1\n      },\n      () => {\n        //makeRemoteRequest();\n      }\n    );\n  };\n\n  const renderSeparator = () => {\n    return (\n      <View\n        style={{\n          height: 1,\n          width: \"86%\",\n          backgroundColor: \"#CED0CE\",\n          marginLeft: \"14%\"\n        }}\n      />\n    );\n  };\n\n  const renderHeader = () => {\n    return <View><Text> note </Text></View>;\n  };\n\n  const renderFooter = () => {\n    if (!state.loading) return null;\n\n    return (\n      <View\n        style={{\n          paddingVertical: 20,\n          borderTopWidth: 1,\n          borderColor: \"#CED0CE\"\n        }}\n      >\n        <ActivityIndicator animating size=\"large\" />\n      </View>\n    );\n  };\n  const shouldRender=(index)=> {\n    return state.closedIndices.indexOf(index) === -1\n    LayoutAnimation.configureNext(LayoutAnimation.Presets.spring);\n  }\n  \n  \n    // var filtered=[]\n    // for (var i = 0; i<state.data.length; i++){\n    //     filtered.push({...state.data[i],index:i})\n    // }\n    // setState({...state,data:filtered})\n  // if(state.loading==true||state.refreshing){\n  //     return (\n  //       <ActivityIndicator animating size=\"large\" color/>\n  //     )\n  //   }\n  \n  // else{\n    \n      return (\n        <View style={{ \n          borderTopWidth: 0, \n          borderBottomWidth: 0, \n          \n          }}>\n              <FlatList \n                data={state.data}\n                renderItem={({ item }) => (\n                  // <SwipeableCard index={item.index} name_first={String(item.name.first)} name_last = {String(item.name.last)} picture={item.picture.thumbnail} email={item.email} onDismiss={dismiss(item.index)}/>\n                  <SwipeableCard index={item.index} name_first={String(item.name.first)} name_last = {String(item.name.last)} picture={item.picture.thumbnail} email={item.email}/>\n                )}\n            keyExtractor={item => item.index}\n            //ItemSeparatorComponent={renderSeparator}\n            //ListHeaderComponent={renderHeader}\n            //ListFooterComponent={renderFooter}\n            \n            scrollEventThrottle={1}\n            //onRefresh={handleRefresh}\n            //refreshing={state.refreshing}\n            //onEndReached={handleLoadMore}\n            onEndReachedThreshold={50}\n          />\n        </View>\n      );\n    //}\n    \n  \n}\n\n\nexport default DefaultFlatList","//directly downloaded from \n//https://github.com/oxyii/react-native-web-swiper\n\nimport React from \"react\";\nimport {\n    StyleSheet,\n    View,\n    ViewPropTypes,\n    Text,\n    Animated,\n    PanResponder,\n    TouchableOpacity,\n} from \"react-native\";\nimport PropTypes from \"prop-types\";\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: \"transparent\",\n    },\n    sliderContainer: {\n        backgroundColor: \"transparent\",\n        overflow: \"hidden\",\n        position: \"relative\",\n        flex: 1,\n    },\n    controlsWrapperStyle: {\n        position: \"absolute\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        right: 0,\n        bottom: 0,\n        padding: 10\n    },\n    dotsWrapperStyle: {\n        alignItems: \"center\",\n        justifyContent: \"center\"\n    },\n    activeDotStyle: {\n        backgroundColor: '#007aff',\n        width: 8,\n        height: 8,\n        borderRadius: 4,\n        marginLeft: 3,\n        marginRight: 3,\n        marginTop: 3,\n        marginBottom: 3\n    },\n    dotStyle: {\n        backgroundColor: 'rgba(0,0,0,.2)',\n        width: 8,\n        height: 8,\n        borderRadius: 4,\n        marginLeft: 3,\n        marginRight: 3,\n        marginTop: 3,\n        marginBottom: 3\n    },\n    prevButtonStyle: {\n        color: '#777777'\n    },\n    nextButtonStyle: {\n        color: '#007aff'\n    },\n});\n\nexport default class Swiper extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            width: 0,\n            height: 0,\n            activeIndex: props.index,\n            pan: new Animated.ValueXY(),\n        };\n\n        this._animatedValueX = 0;\n        this._animatedValueY = 0;\n\n        this._panResponder = PanResponder.create({\n            onPanResponderTerminationRequest: () => false,\n            onMoveShouldSetResponderCapture: () => true,\n            onMoveShouldSetPanResponderCapture: (e, gestureState) => {\n                if(!this.props.swipingEnabled)\n                    return false;\n                if(this.props.onAnimationStart)\n                    this.props.onAnimationStart();\n                const allow = Math.abs(this.props.direction === \"row\" ? gestureState.dx : gestureState.dy) > 5;\n                if(allow) this.stopAutoplay();\n                return allow;\n            },\n            onPanResponderGrant: (e, gestureState) => this._fixState(),\n            onPanResponderMove: Animated.event([\n                null, this.props.direction === \"row\" ? {dx: this.state.pan.x} : {dy: this.state.pan.y},\n            ]),\n            onPanResponderRelease: (e, gesture) => {\n                const correction = this.props.direction===\"row\" ? gesture.moveX-gesture.x0 : gesture.moveY-gesture.y0;\n                this.startAutoplay();\n                if(Math.abs(correction) < ((this.props.direction===\"row\" ? this.state.width : this.state.height) * this.props.actionMinWidth))\n                    return Animated.spring(this.state.pan,{toValue:{x:0,y:0}}).start(() => {\n                        if(this.props.onAnimationEnd)\n                            this.props.onAnimationEnd(this.state.activeIndex);\n                    });\n                this._changeIndex(correction>0 ? -1 : 1);\n            }\n        });\n    }\n\n    componentDidMount() {\n        this.state.pan.x.addListener((value) => this._animatedValueX = value.value);\n        this.state.pan.y.addListener((value) => this._animatedValueY = value.value);\n        this.startAutoplay();\n    }\n\n    componentWillUnmount() {\n        this.stopAutoplay();\n        this.state.pan.x.removeAllListeners();\n        this.state.pan.y.removeAllListeners();\n    }\n\n    startAutoplay() {\n        this.stopAutoplay();\n        if(this.props.autoplayTimeout) {\n            this.autoplay = setTimeout(() => {\n                this.moveUpDown(this.props.autoplayTimeout<0)\n            }, Math.abs(this.props.autoplayTimeout)*1000);\n        }\n    }\n\n    stopAutoplay() {\n        this.autoplay && clearTimeout(this.autoplay);\n    }\n\n    moveUpDown(down=false) {\n        this._fixState();\n        if(this.props.onAnimationStart)\n            this.props.onAnimationStart();\n        this._changeIndex(down ? -1 : 1);\n    }\n\n    _fixState() {\n        this._animatedValueX = this.props.direction===\"row\" ? this.state.width*this.state.activeIndex*-1 : 0;\n        this._animatedValueY = this.props.direction===\"row\" ? 0 : this.state.height*this.state.activeIndex*-1;\n        this.state.pan.setOffset({x: this._animatedValueX, y: this._animatedValueY});\n        this.state.pan.setValue({x: 0, y: 0});\n    }\n\n    _changeIndex(delta=1) {\n        let move = {x:0,y:0};\n        let skipChanges = (!delta);\n        let calcDelta = delta;\n        if(this.state.activeIndex<=0 && delta<0) {\n            skipChanges = (!this.props.loop);\n            calcDelta = this.count+delta;\n        } else if(this.state.activeIndex+1>=this.count && delta>0) {\n            skipChanges = (!this.props.loop);\n            calcDelta = -1*this.state.activeIndex+delta-1;\n        }\n        if(skipChanges)\n            return Animated.spring(this.state.pan,{toValue:move}).start(() => {\n                if(this.props.onAnimationEnd)\n                    this.props.onAnimationEnd(this.state.activeIndex);\n            });\n        this.stopAutoplay();\n        let index = this.state.activeIndex+calcDelta;\n        this.setState({activeIndex: index});\n        if(this.props.direction===\"row\")\n            move.x = this.state.width*-1*calcDelta;\n        else\n            move.y = this.state.height*-1*calcDelta;\n        Animated.spring(this.state.pan,{toValue:move}).start(() => {\n            if(this.props.onAnimationEnd)\n                this.props.onAnimationEnd(index);\n        });\n        this.startAutoplay();\n        this.props.onIndexChanged && this.props.onIndexChanged(index);\n    }\n\n    _onLayout(event) {\n        const {width,height} = event.nativeEvent.layout;\n        this.setState({width,height}, () => this._fixState());\n    }\n\n    render() {\n        const {pan,width,height,activeIndex} = this.state;\n        const {\n            direction,\n            containerStyle,\n            swipeAreaStyle,\n            swipeWrapperStyle,\n            controlsWrapperStyle,\n            dotsWrapperStyle,\n            dotElement,\n            dotStyle,\n            activeDotElement,\n            activeDotStyle,\n            prevButtonElement,\n            prevButtonStyle,\n            prevButtonText,\n            nextButtonElement,\n            nextButtonStyle,\n            nextButtonText,\n            loop,\n            buttonsEnabled,\n        } = this.props;\n        if(!width) return (<View style={[styles.container,containerStyle]} onLayout={this._onLayout.bind(this)}/>);\n        const overRangeButtonsOpacity = !loop ? this.props.overRangeButtonsOpacity : this.props.overRangeButtonsOpacity || 1;\n        let {children} = this.props;\n        if(!Array.isArray(children)) children = [children];\n        this.count = children.length;\n        return (\n            <View style={[styles.container,containerStyle]} onLayout={this._onLayout.bind(this)}>\n                <View style={[styles.sliderContainer,swipeAreaStyle]}>\n                    <Animated.View\n                        style={[{\n                            position: \"relative\",\n                            top: 0,\n                            left: 0,\n                        },swipeWrapperStyle,{\n                            flexDirection: direction,\n                            width: direction===\"row\" ? width*this.count : width,\n                            height: direction===\"row\" ? height : height*this.count,\n                        },{transform:[{translateX:pan.x},{translateY:pan.y}]}]}\n                        {...this._panResponder.panHandlers}\n                    >\n                        {children.map((el,i)=>(<View key={i} style={{width,height}}>{el}</View>))}\n                    </Animated.View>\n                    {!buttonsEnabled ? null : (\n                      <View style={[styles.controlsWrapperStyle,{\n                          flexDirection: direction,\n                      }, direction===\"row\" ? {left: 0} : {top: 0}, controlsWrapperStyle]}>\n                          <View style={{opacity:!activeIndex ? overRangeButtonsOpacity : 1}}>\n                              <TouchableOpacity disabled={!activeIndex && !loop} onPress={()=>this.moveUpDown(true)}>\n                                  {prevButtonElement || <Text style={[styles.prevButtonStyle,prevButtonStyle]}>{prevButtonText}</Text>}\n                              </TouchableOpacity>\n                          </View>\n                          <View style={[{flexDirection:direction},styles.dotsWrapperStyle,dotsWrapperStyle]}>\n                              {children.map((el,i)=>(\n                                <View key={i}>\n                                    {i===activeIndex\n                                      ? activeDotElement || <View style={[styles.activeDotStyle,activeDotStyle]} />\n                                      : dotElement || <View style={[styles.dotStyle,dotStyle]} />}\n                                </View>\n                              ))}\n                          </View>\n                          <View style={{opacity:activeIndex+1>=this.count ? overRangeButtonsOpacity : 1}}>\n                              <TouchableOpacity disabled={activeIndex+1>=this.count && !loop} onPress={()=>this.moveUpDown()}>\n                                  {nextButtonElement || <Text style={[styles.nextButtonStyle,nextButtonStyle]}>{nextButtonText}</Text>}\n                              </TouchableOpacity>\n                          </View>\n                      </View>\n                    )}\n                </View>\n            </View>\n        );\n    }\n}\n\nSwiper.propTypes = {\n    direction: PropTypes.oneOf([\"row\",\"column\"]),\n    index: PropTypes.number,\n    onIndexChanged: PropTypes.func,\n    onAnimationStart: PropTypes.func,\n    onAnimationEnd: PropTypes.func,\n    actionMinWidth: PropTypes.number,\n    children: PropTypes.node.isRequired,\n    overRangeButtonsOpacity: PropTypes.number,\n    loop: PropTypes.bool,\n    autoplayTimeout: PropTypes.number,\n    swipingEnabled: PropTypes.bool,\n    buttonsEnabled: PropTypes.bool,\n    containerStyle: ViewPropTypes.style,\n    swipeAreaStyle: ViewPropTypes.style,\n    swipeWrapperStyle: ViewPropTypes.style,\n    controlsWrapperStyle: ViewPropTypes.style,\n    dotsWrapperStyle: ViewPropTypes.style,\n    dotStyle: ViewPropTypes.style,\n    dotElement: PropTypes.element,\n    activeDotStyle: ViewPropTypes.style,\n    activeDotElement: PropTypes.element,\n    prevButtonStyle: Text.propTypes.style,\n    prevButtonElement: PropTypes.element,\n    prevButtonText: PropTypes.string,\n    nextButtonStyle: Text.propTypes.style,\n    nextButtonElement: PropTypes.element,\n    nextButtonText: PropTypes.string,\n};\n\nSwiper.defaultProps = {\n    direction: \"row\",\n    index: 0,\n    actionMinWidth: 0.25,\n    overRangeButtonsOpacity: 0,\n    loop: false,\n    autoplayTimeout: 0,\n    swipingEnabled: true,\n    buttonsEnabled: true,\n    prevButtonText: \"prev\",\n    nextButtonText: \"next\",\n};","\nimport React,{Component,useContext} from 'react';\nimport {Animated,PanResponder,Dimensions,View,Text,Image,TouchableOpacity,ScrollView} from 'react-native'\nimport { Context } from \"../context\";\nimport Swiper from './Swiper'\nimport SwipeableList from './SwipeableList'\nimport Header from './Header'\nconst translateY = new Animated.Value(0);\n\n\n\nclass SwipeableScroller extends Component {\n    \n    //const [state, setState] = useContext(Context);\n    constructor(props) {\n        super(props);\n        //this.scroller=React.createRef()\n        //this.Header=React.createRef()\n        this.state = {\n            yscroll: new Animated.Value(0),\n            dy:new Animated.Value(0),\n            lastscroll:0,\n            scroll:0\n        };\n      }\n    componentDidMount(){\n        translateY.addListener(({value})=>{\n            //console.log(value)\n            this.setState({...this.state,scroll:value})\n            //this.Header.setNativeProps({scrollValue:value})\n            // this.scroller.current.scrollTo({\n            //     y:-1*value\n            // })\n            //console.log(this.Header)\n            //this.Header.props.yscroll=value\n        })\n    }\n    onScroll=(e)=>{\n        //console.log()\n        //console.log(e.nativeEvent.contentOffset.y)\n        //setState({...state,yscroll:e.nativeEvent.contentOffset.y})\n        translateY.setValue(e.nativeEvent.contentOffset.y)\n        //console.log()\n      }\n    // _panResponder = PanResponder.create({\n    //     onMoveShouldSetResponderCapture: () => true,\n    //     onMoveShouldSetPanResponderCapture: () => true,\n    //     onPanResponderMove: (e,gestureState)=>{\n    //         translateY.setValue(this.state.lastscroll+gestureState.dy)\n\n    //         // this.scroller.current.scrollTo({\n    //         //     y:-1*this.state.lastscroll+translateY._value,\n    //         //     animated:true,\n    //         //     duration:1\n    //         // })\n            \n    //     },\n\n    //     onPanResponderRelease: (e, {vy, dy}) => {\n    //         //translateY.setValue(state.yscroll._value+dy)\n    //         //console.log(this.state.yscroll+translateY._value)\n    //         this.setState(\n    //             (state,props)=>(\n    //                 {\n    //                     ...this.state,\n    //                     lastscroll:state.lastscroll+dy}\n    //             ))\n    //         //console.log(this.state.yscroll)\n    //     }\n    // });\n\n    render(){\n        return(\n            <View>\n            <Header ref = {header=>{this.Header=header}} style = {{height:22}} yscroll={this.state.scroll}/>\n            <ScrollView \n                //ref={this.scroller}\n                style={{backgroundColor:'transparent',height:Dimensions.get('window').height*13/15-60}}\n                onScroll={this.onScroll}\n                //scrollTop={state.yscroll}\n                scrollEnabled={false}\n                scrollEventThrottle={16}\n                // {...this._panResponder.panHandlers}\n            >\n            \n            <View style={{backgroundColor:'transparent',flex:1,flexDirection:'column',margin:5,paddingRight:2,paddingLeft:2}}>\n                {/* {props.children} */}\n                \n                <View style={{backgroundColor:'transparent',flex:1,height:Dimensions.get('window').height*2/3,flexDirection:'column',margin:5,paddingRight:2,paddingLeft:2}}>\n                \n          <View  style={{height:Dimensions.get('window').height/6,backgroundColor:'transparent'}}>\n          \n            <Swiper buttonsEnabled={false} loop={true} autoplayTimeout={5}>\n  \n              <View style={{\n                flex: 1,\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                backgroundColor: \"rgb(20,20,20)\"\n                }}>\n                  <Text>Slide 1</Text>\n              </View>\n              <View style={{\n                flex: 1,\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                backgroundColor: \"rgb(110,110,110)\"\n              }}>\n                  <Text>Slide 2</Text>\n              </View>\n              <View style={{\n                flex: 1,\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                backgroundColor: \"rgb(200,200,200)\"\n              }}>\n                  <Text>Slide 3</Text>\n              </View>\n            </Swiper>\n          </View>\n\n          </View>\n          <View>\n            <SwipeableList/>\n          </View>\n            </View>\n        </ScrollView>\n        </View>\n        )\n     }\n\n}\nexport default SwipeableScroller\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { Context } from \"../context\";\nimport {TextInput,View,TouchableOpacity,Dimensions,Text} from \"react-native\"\n\nconst AddPost = () => {\nconst [state, setState] = useContext(Context);\nconst[userInput,setUserInput,Refs] = useState(\"\")\n//const [userInput, setUserInput] = useState(\"\");\n//const [trackTitle, setTrackTitle] = useState(\"\");\n//const [posts] =useState(\"\")\n\n// useEffect(() => {\n// //     axios\n// //       .get(\n// //         `https://cors-anywhere.herokuapp.com/http://api.musixmatch.com/ws/1.1/track.search?q_track=${trackTitle}&page_size=10&page=1&s_track_rating=desc&apikey=${\n// //           process.env.REACT_APP_MM_KEY\n// //         }`\n// //       )\n// //       .then(res => {\n// //         let track_list = res.data.message.body.track_list;\n// //         setState({ track_list: track_list, heading: \"Search Results\" });\n// //       })\n// //       .catch(err => console.log(err));\n// //   }, [trackTitle]\n// // this.refs.addPost.value=\"\"\n//     },[state.posts]\n// );\n   \n    // window.addEventListener(\"resize\", updateDimensions);\n    // window.addEventListener(\"orientationchange\",updateDimensions);\n    const addTodo = (e) => {\n    //e.preventDefault();\n    //setTrackTitle(userInput);\n    if(state.text==\"\"){\n        //console.log('stop')\n    }\n    else{\n        alert(state.text)\n        setState({...state,posts:[...state.posts,state.text],text:\"\"})\n    }\n    //console.log(state)\n    //console.log(Refs)\n    //document.getElementById('addPost').value=''\n    \n  };\n\n\n  const onChange = (e) => {\n    //e.preventDefault()\n    //setUserInput(e.target.value)\n    //console.log()\n    \n    setState({...state,userInput:e.target.value})\n    //console.log(e.nativeEvent.inputType)\n    \n        if(e.nativeEvent.inputType=='insertLineBreak'){\n            addTodo()\n            //console.log('we should be here')\n            //setState({...state,posts:[...state.posts,state.text],text:\"\"})\n        }\n        else if(e.nativeEvent.inputType=='insertText'){\n            \n            setState({...state,text:e.target.value})\n        }\n    \n\n    \n  };\n\n  return (\n    // eslint-disable-next-line no-use-before-define\n    <View style={{\n      marginTop:1,\n      borderColor:'transparent',\n      borderWidth:1,\n      flexDirection:'row',\n      flex:1,\n      // width:Dimensions.get('window').width,\n    }}>\n      {/* <form onSubmit={addTodo}  style={{\n              margin:1,\n              borderColor:'#cfcfcf',\n              borderWidth:1,\n              alignItems:'center',\n              flexDirection:'column',\n              flex:1,\n              \n              // shadowColor: 'rgba(1, 1, 1, 1)',\n              // shadowOffset: {width: 0, height: 0},\n              // shadowRadius: 1,\n              color:'black',\n              // textShadowColor: 'rgba(1, 1, 1, 1)',\n              // textShadowOffset: {width: 0, height: 0},\n              // textShadowRadius: 5\n            }}> */}\n        \n          {/* <input\n            id=\"addPost\"\n            type=\"text\"\n            className=\"form-control form-control-lg\"\n            placeholder=\"type todo...\"\n            name=\"userInput\"\n            value={state.text}\n            onChange={onChange}\n          /> */}\n        <TextInput \n            className='inputText'\n            editable = {true}\n            autoCorrect={false}\n            blurOnSubmit={false}\n            maxLength = {40}\n            multiline = {false}\n            numberOfLines = {1}\n            caretHidden={true}\n            //onChangeText={(text) => setState({...state,text:text})}\n            onChangeText={(text)=>{ \n              setState({...state,text:text})\n              //console.log(text)\n            }}\n            keyboardType={'default'}\n            value={state.text}\n            onChange={onChange}\n            onSubmitEditing={addTodo}\n            //onClick={console.log('clicked')}\n            returnKeyType='search'\n            clearButtonMode=\"while-editing\"\n            autoFocus\n            //onFocus={()=>{console.log('on focus')}}\n            theme={{ colors: { placeholder: 'white', text: 'white', primary: 'white', \n  underlineColor: 'transparent', background: '#003489' } }}\n            style={{\n              marginLeft:1,\n              paddingLeft:3,\n              borderColor:'#cfcfcf',\n              borderWidth:1,\n              alignItems:'center',\n              flexDirection:'row',\n              flex:1,\n\n              //outline:'none',\n              width:Dimensions.get('window').width-26,\n              // shadowColor: 'rgba(1, 1, 1, 1)',\n              // shadowOffset: {width: 0, height: 0},\n              // shadowRadius: 1,\n              color:'black',\n              // paddingBottom:2,\n              height:22,\n              // textShadowColor: 'rgba(1, 1, 1, 1)',\n              // textShadowOffset: {width: 0, height: 0},\n              // textShadowRadius: 5\n              \n            }}\n          />\n        \n        {/* <button className=\"button\" type=\"submit\">\n          add\n        </button> */}\n        <TouchableOpacity \n           \n            type=\"submit\" \n            style={{\n                height:22,\n                width:22,\n                backgroundColor:'#ffffff',\n                \n                alignItems:'center',\n                justifyContent:'center',\n                marginLeft:2,\n                marginRight:1,\n                borderColor:'#cfcfcf',\n                borderWidth:1,\n                paddingLeft:2,\n                paddingRight:2,\n                //flex:1,\n                //shadowColor: 'rgba(1, 1, 1, 1)',\n                //shadowOffset: {width: 0, height: 0},\n                //shadowRadius: 20\n                }}\n            onPress={addTodo}>\n          <Text style={{\n              color:'black',\n              fontSize:12,\n              paddingBottom:2,\n              //textShadowColor: 'rgba(1, 1, 1, 1)',\n              //textShadowOffset: {width: 0, height: 0},\n              //textShadowRadius: 20,\n            }}>\n                +\n            </Text>\n        </TouchableOpacity>\n      {/* </form> */}\n    </View>\n  );\n};\n\nexport default AddPost;","//import React, {memo} from 'react'\nimport React,{Component,useContext,useState,useEffect,memo} from 'react';\nimport {Animated,PanResponder,Text,View,KeyboardAvoidingView,ScrollView,Dimensions} from 'react-native'\nimport HorizontalSwipeElements from './HorizontalSwipeElements'\nimport SwipeableList from './SwipeableList'\nimport SwipeableScroller from './SwipeableScroller'\nimport Swiper from './Swiper'\nimport AddPost from './AddPost'\nimport Header from './Header'\nconst Home = () => (\n  <div style={{\n    flex:1,\n    margin:1,\n    borderColor:'#cfcfcf',\n    borderWidth:1,\n    borderRadius:2,\n    // shadowColor: 'rgba(1, 1, 1, 1)',\n    // shadowOffset: {width: 0, height: 0},\n    // shadowRadius: 20,\n    //backgroundColor:'#ffffff',\n    alignItems:'center',\n    justifyContent:'space-evenly',\n    //height:22,\n  }}>\n  {/* <p style={{          \n  \n      height:22,\n \n      flexDirection:'row',\n      flex:1,\n      fontSize:12,\n \n      color:'black',\n      // textShadowColor: 'black',\n      // textShadowOffset: {width: 0, height: 0},\n      // textShadowRadius: 20\n    }}>\n    Home\n  </p> */}\n     <View>  \n      {/* <Header/>        */}\n      <SwipeableScroller>\n        {/* <View style={{backgroundColor:'transparent',flex:1,height:Dimensions.get('window').height*2/3,flexDirection:'column',margin:5,paddingRight:2,paddingLeft:2}}>\n\n          <View  style={{height:Dimensions.get('window').height/6,backgroundColor:'transparent'}}>\n\n            <Swiper buttonsEnabled={false} loop={true} autoplayTimeout={5}>\n  \n              <View style={{\n                flex: 1,\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                backgroundColor: \"rgb(20,20,20)\"\n                }}>\n                  <Text>Slide 1</Text>\n              </View>\n              <View style={{\n                flex: 1,\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                backgroundColor: \"rgb(110,110,110)\"\n              }}>\n                  <Text>Slide 2</Text>\n              </View>\n              <View style={{\n                flex: 1,\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                backgroundColor: \"rgb(200,200,200)\"\n              }}>\n                  <Text>Slide 3</Text>\n              </View>\n            </Swiper>\n          </View>\n\n          </View>\n          <View>\n            <SwipeableList/>\n          </View> */}\n        </SwipeableScroller>\n        <KeyboardAvoidingView style={{height:Dimensions.get('window').height*5/30-30,backgroundColor:'transparent',flexDirection:'column',margin:5}} behavior=\"padding\" enabled>\n          <View style={{backgroundColor:'transparent',height:30,felxDirection:'column',alignItems:'center',justifyContent:'center',marginRight:10,marginLeft:10}}>\n            <AddPost style={{marginTop:0}}/>\n          </View>\n\n          <ScrollView horizontal = {true} style={{height:Dimensions.get('window').height/15,backgroundColor:'transparent',flexDirection:'row',marginLeft:0,marginRight:0}}>\n            <View style={{height:Dimensions.get('window').height/15,width:(Dimensions.get('window').height)/12,backgroundColor:'white',flex:1,flexDirection:'column',marginRight:2,marginLeft:3}}>\n              <Text selectable={false}>one</Text>\n            </View>\n            <View style={{height:Dimensions.get('window').height/15,width:(Dimensions.get('window').height)/12,backgroundColor:'lightgrey',flex:1,flexDirection:'column',marginRight:2,marginLeft:2}}>\n              <Text selectable={false}>two</Text>\n            </View>\n            <View style={{height:Dimensions.get('window').height/15,width:(Dimensions.get('window').height)/12,backgroundColor:'darkgrey',flex:1,flexDirection:'column',marginRight:2,marginLeft:2}}>\n              <Text selectable={false}>three</Text>\n            </View>\n            <View style={{height:Dimensions.get('window').height/15,width:(Dimensions.get('window').height)/12,backgroundColor:'black',flex:1,flexDirection:'column',marginRight:2,marginLeft:2}}>\n              <Text selectable={false}>four</Text>\n            </View>\n            <View style={{height:Dimensions.get('window').height/15,width:(Dimensions.get('window').height)/12,backgroundColor:'white', flex:1,flexDirection:'column',marginRight:2,marginLeft:2}}>\n              <Text selectable={false}>one</Text>\n            </View>\n            <View style={{height:Dimensions.get('window').height/15,width:(Dimensions.get('window').height)/12,backgroundColor:'lightgrey',flex:1,flexDirection:'column',marginRight:2,marginLeft:2}}>\n              <Text selectable={false}>two</Text>\n            </View>\n            <View style={{height:Dimensions.get('window').height/15,width:(Dimensions.get('window').height)/12,backgroundColor:'darkgrey',flex:1,flexDirection:'column',marginRight:2,marginLeft:2}}>\n              <Text selectable={false}>three</Text>\n            </View>\n            <View style={{height:Dimensions.get('window').height/15,width:(Dimensions.get('window').height)/12,backgroundColor:'black',flex:1,flexDirection:'column',marginRight:2,marginLeft:2}}>\n              <Text selectable={false}>four</Text>\n            </View>\n          </ScrollView>\n        \n        </KeyboardAvoidingView>\n      </View> \n  </div>\n)\n\nexport default Home\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchPosts } from '../actions/postActions';\nimport {View,Text,StyleSheet} from 'react-native';\n\n\n  \n  const mapStateToProps = state => ({\n    posts: state.posts.items,\n    newPost: state.posts.item\n  });\n\nclass Posts extends Component {\n  componentWillMount() {\n    //this.props.fetchPosts();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.newPost) {\n      this.props.posts.unshift(nextProps.newPost);\n    }\n  }\n\n  render() {\n    \n    const postItems = this.props.posts.map((post, i)=>\n      <View key={i} style={{\n\n      }}>\n        <Text style={{\n          color:'black',\n          // textShadowColor: 'rgba(1, 1, 1, 1)',\n          // textShadowOffset: {width: 0, height: 0},\n          // textShadowRadius: 20\n          }}>{post}</Text>\n      </View>\n    );\n  \n    return (\n      <View style={{\n        margin:1,\n        borderColor:'#cfcfcf',\n        borderWidth:1,\n        // shadowColor: 'rgba(1, 1, 1, 1)',\n        // shadowOffset: {width: 0, height: 0},\n        // shadowRadius: 20,\n        }}>\n        {postItems}\n      </View>\n    );\n    \n  }\n}\n\nPosts.propTypes = {\n  fetchPosts: PropTypes.func.isRequired,\n  posts: PropTypes.array.isRequired,\n  newPost: PropTypes.object\n};\n\nexport default connect(mapStateToProps, { fetchPosts })(Posts);","import {Dimensions} from 'react-native'\nexport const fetchPosts = () => dispatch => {\n  fetch('https://jsonplaceholder.typicode.com/posts')\n    .then(res => res.json())\n    .then(posts =>\n      dispatch({\n        type: 'FETCH_POSTS',\n        payload: posts\n      })\n    );\n};\nexport const setTitleOnload = (title) => {\n  \n   return({\n     type: 'SET_TITLE',\n     payload: title\n   })\n  }\n\nexport const getYscrolled=(e)=>{\n    var payload=String(e.target)\n    return({\n      type:'GET_Y_SCROLLED',\n      payload:payload\n    })\n}\n\nexport const updateDimensions =(event) =>{\n  //var width= Math.floor(Dimensions.get('window').width)\n        //console.log('width received is'+event.target.innerWidth)\n        return({\n          type:'SET_WIDTH',\n          payload:event.target.innerWidth\n        })\n}\nexport const createPost = (postData) => dispatch => {\n  fetch('https://jsonplaceholder.typicode.com/posts', {\n    method: 'POST',\n    headers: {\n      'content-type': 'application/json'\n    },\n    body: JSON.stringify(postData)\n  })\n    .then(res => res.json())\n    .then(post =>\n      dispatch({\n        type: 'NEW_POST',\n        payload: post\n      })\n    );\n};\nexport const addPost = (text) => dispatch => {\n  //console.log(text)\n    dispatch({\n      type: 'ADD_POST',\n      payload: text\n    }) \n};\nexport const setTitle = (title) => dispatch => {\n  //console.log(title)\n  dispatch({\n    type: 'SET_TITLE',\n    payload: title\n  })\n\n};","import React, {Button, Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom'\nclass CatalogueScreen extends Component {\n    constructor(props) {\n        super(props);\n\n    }\n\n    componentWillMount() {\n\n    }\n\n    componentDidMount() {\n\n    }\n\n    componentWillReceiveProps(nextProps) {\n\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n\n    }\n\n    componentWillUpdate(nextProps, nextState) {\n\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n\n    }\n\n    componentWillUnmount() {\n\n    }\n\n    render() {\n        return (\n            <div>\n                <div>\n                    catalogue\n                </div>\n                <Link id=\"linkCategory\" to=\"/Category\">Category</Link><br/>\n                <Link id=\"linkProduct\" to=\"/Product\">Product</Link><br/>\n                \n            </div>\n            \n        );\n    }\n}\n\nCatalogueScreen.propTypes = {\n\n};\n\nexport default CatalogueScreen;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom'\nclass CategoryScreen extends Component {\n    constructor(props) {\n        super(props);\n\n    }\n\n    componentWillMount() {\n\n    }\n\n    componentDidMount() {\n\n    }\n\n    componentWillReceiveProps(nextProps) {\n\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n\n    }\n\n    componentWillUpdate(nextProps, nextState) {\n\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n\n    }\n\n    componentWillUnmount() {\n\n    }\n\n    render() {\n        return (\n            <div>\n                <div>\n                    category\n                </div>\n                <Link id=\"Product\" to=\"/Product\">Product</Link><br/>\n                <Link id=\"Catalouge\" to=\"/Catalogue\">Catalogue</Link><br/>\n            </div>\n        );\n    }\n}\n\nCategoryScreen.propTypes = {\n\n};\n\nexport default CategoryScreen;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom'\nclass ProductScreen extends Component {\n    render() {\n        return (\n            <div>\n                <div>product</div>\n                <Link id=\"Catalouge\" to=\"/Catalogue\">Catalogue</Link><br/>\n                <Link id=\"Category\" to=\"/Category\">Category</Link><br/>\n            </div>\n        );\n    }\n}\n\nexport default ProductScreen;","import React,{memo} from 'react';\n//import { createStackNavigator, createAppContainer } from '@react-navigation/native';\n// import { CatalogueScreen, \n//          CategoryScreen, \n//          ProductScreen,  \n//          SearchScreen,\n//          SearchResultsScreen,\n//          BagScreen } from './screens';\nimport {createSwitchNavigator,createBottomTabNavigator} from \"@react-navigation/core\"\nimport {createBrowserApp} from \"@react-navigation/web\"\nimport CatalogueScreen from './screens/CatalogueScreen'\nimport CategoryScreen from './screens/CategoryScreen'\nimport ProductScreen from './screens/ProductScreen'\nimport SearchScreen from './screens/SearchScreen'\nimport SearchResultsScreen from './screens/SearchResultsScreen'\nimport BagScreen from './screens/BagScreen'\n//import Ionicons from 'react-native-vector-icons/Ionicons';\n\n\n\n\nconst Nav = createSwitchNavigator({\n   catalogue: CatalogueScreen,\n    category: CategoryScreen,\n     product: ProductScreen\n}, {\n    //configuration options...\n    defaultNAvigationOptions:{\n        headerStyle:{\n            backgroundColor:'orange'\n        }\n    }\n});\nconst Navigator = createBrowserApp(Nav)\n// const Navigator = createDrawerNavigator({\n//     SearchHome: SearchScreen,\n//  SearchResults: SearchResultsScreen\n// }, {\n//   //configuration options...\n// });\n \n//export default createBrowserApp(Navigator)\n\nexport default memo(Navigator)\n\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass SearchScreen extends Component {\n    constructor(props) {\n        super(props);\n\n    }\n\n    componentWillMount() {\n\n    }\n\n    componentDidMount() {\n\n    }\n\n    componentWillReceiveProps(nextProps) {\n\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n\n    }\n\n    componentWillUpdate(nextProps, nextState) {\n\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n\n    }\n\n    componentWillUnmount() {\n\n    }\n\n    render() {\n        return (\n            <div>\n                Search\n            </div>\n        );\n    }\n}\n\nSearchScreen.propTypes = {\n\n};\n\nexport default SearchScreen;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass SearchResultsScreen extends Component {\n    constructor(props) {\n        super(props);\n\n    }\n\n    componentWillMount() {\n\n    }\n\n    componentDidMount() {\n\n    }\n\n    componentWillReceiveProps(nextProps) {\n\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n\n    }\n\n    componentWillUpdate(nextProps, nextState) {\n\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n\n    }\n\n    componentWillUnmount() {\n\n    }\n\n    render() {\n        return (\n            <div>\n                searchResult\n            </div>\n        );\n    }\n}\n\nSearchResultsScreen.propTypes = {\n\n};\n\nexport default SearchResultsScreen;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass BagScreen extends Component {\n    constructor(props) {\n        super(props);\n\n    }\n\n    componentWillMount() {\n\n    }\n\n    componentDidMount() {\n\n    }\n\n    componentWillReceiveProps(nextProps) {\n\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n\n    }\n\n    componentWillUpdate(nextProps, nextState) {\n\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n\n    }\n\n    componentWillUnmount() {\n\n    }\n\n    render() {\n        return (\n            <div>\n                bagscreen\n            </div>\n        );\n    }\n}\n\nBagScreen.propTypes = {\n\n};\n\nexport default BagScreen;","import React from 'react'\n//import { Link } from 'react-router-dom'\nimport { BrowserRouter,HashRouter, Route, Link,Router,Switch } from \"react-router-dom\";\nimport {ScrollView} from 'react-native'\nimport Navigator from './Navigator'\nimport Catalogue from './screens/CatalogueScreen'\nimport Category from './screens/CategoryScreen'\nimport Product from './screens/ProductScreen'\nimport {SafeAreaView,KeyboardAvoidingView,Text,View,StyleSheet,Dimensions,TouchableOpacity} from 'react-native'\nconst NavBar = () => (\n  // <SafeAreaView>\n  //     <KeyboardAvoidingView             \n  //     style={{\n  //       height:22,\n  //       //backgroundColor:'#666666',\n  //       alignItems:'center',\n  //       justifyContent:'space-evenly',\n  //       flexDirection:'row',\n  //       flex:1,\n  //       fontSize:12,\n  //       margin:1,\n  //       borderColor:'#cfcfcf',\n  //       borderWidth:0,\n  //       // shadowColor: 'rgba(1, 1, 1, 1)',\n  //       // shadowOffset: {width: 0, height: 0},\n  //       // shadowRadius: 20,\n  //       backgroundColor:'#ffffff'\n  //     }}\n  //   >\n      <View style={{\n              height:Dimensions.get('window').height/15,\n              //backgroundColor:'#666666',\n              alignItems:'center',\n              justifyContent:'space-evenly',\n              flexDirection:'row',\n              flex:1,\n              fontSize:12,\n              margin:1,\n              borderColor:'#cfcfcf',\n              borderWidth:0,\n              // shadowColor: 'rgba(1, 1, 1, 1)',\n              // shadowOffset: {width: 0, height: 0},\n              // shadowRadius: 20,\n              backgroundColor:'#ffffff'\n            }}>\n        <View style={styles.box}>\n          <Link id=\"linkHome\" \n            to=\"/\" \n            style={{\n              // color:'black', \n              flex:1,\n              textDecorationLine:'none',\n              borderColor:'black',\n              borderWidth:2,\n              color:'white',\n              fontSize: 12,\n              textShadowColor: 'black',\n              textShadowOffset: {width: 0, height: 0},\n              textShadowRadius: 8,\n              alignItems:'center',\n              justifyContent:'center',\n              flexDirection:'row',\n              textAlign:'center'\n            }}>\n              <TouchableOpacity style={styles.touch}>\n              <Text\n            \n            style={{\n              // color:'black', \n              textDecorationLine:'none',\n              color:'white',\n              fontSize: 12,\n              textShadowColor: 'black',\n              textShadowOffset: {width: 0, height: 0},\n              textShadowRadius: 8\n            }}>Home</Text>\n            </TouchableOpacity>\n            </Link><br/>\n        </View>\n        <View style={styles.box}>\n        <Link style={\n          {\n            flex:1,\n            textDecorationLine:'none',\n            borderColor:'black',\n            borderWidth:2,\n            color:'white',\n            fontSize: 12,\n            textShadowColor: 'black',\n            textShadowOffset: {width: 0, height: 0},\n            textShadowRadius: 8,\n            flex:1,\n            alignItems:'center',\n            justifyContent:'center',\n            flexDirection:'row',\n            textAlign:'center'\n          }\n        } to=\"/login\">\n          <TouchableOpacity style={styles.touch}>\n          <Text id=\"linkLogin\" \n          style={{\n            // color:'black', \n            textDecorationLine:'none',\n            color:'white',\n            fontSize: 12,\n            textShadowColor: 'black',\n            textShadowOffset: {width: 0, height: 0},\n            textShadowRadius: 8,\n            flex:1,\n            textAlign:'center',\n            alignItems:'center',\n            justifyContent:'center',\n            flexDirection:'row',\n          }}\n          >Login</Text>\n          </TouchableOpacity>\n        </Link><br/>\n        </View>\n        {/* <View style={styles.box}>\n          <Link id=\"linkTodo\" to=\"/todo\" style={{color:'black', textDecorationLine:'none',borderColor:'black',borderWidth:2}}>Todo</Link><br/>\n        </View> */}\n        {/* <View style={styles.box}>\n          <Link id=\"linkMap\" to=\"/map\" style={{color:'black', textDecorationLine:'none',borderColor:'black',borderWidth:2}}>Map</Link><br/>\n        </View>\n       */}\n          \n      \n      </View>\n  //   </KeyboardAvoidingView>\n  // </SafeAreaView>\n)\nconst styles = StyleSheet.create({\n  \n    box:{\n      margin:0,\n      //padding:1,\n      height:22,\n      backgroundColor:'#ffffff',\n      alignItems:'center',\n      justifyContent:'center',\n      flexDirection:'row',\n      flex:1,\n      fontSize:12,\n      borderColor:'black',\n      borderRadius:2,\n      color:'black',\n      // textShadowColor: 'rgba(1, 1, 1, 1)',\n      // textShadowOffset: {width: 0, height: 0},\n      // textShadowRadius: 20,\n      borderColor:'#cfcfcf',\n      borderWidth:1,\n    },\n    touch:{\n      margin:0,\n      //padding:1,\n      height:22,\n      backgroundColor:'transparent',\n      alignItems:'center',\n      justifyContent:'center',\n      flexDirection:'row',\n      flex:1\n    },\n    link:{\n      color:'black', \n      textDecorationLine:'none',\n      borderColor:'black',\n      borderWidth:1 \n    }\n        \n})\nexport default NavBar\n","import React, {Component,useState,memo} from 'react'\nimport PropTypes from 'prop-types'\nimport {connect} from 'react-redux'\nimport {addPost} from '../actions/postActions'\nimport {TextInput,View,TouchableOpacity,Text} from 'react-native'\n// import {WholeContext} from \"../WholeContext\"\n// export default function Form(props){\n//     const [value, setValue]=useState('');\n\n//     function handleAdd(e){\n//         e.preventDefault();\n//         props.onAdd(value);\n//     }\n//     function handleChange(e){\n//         setValue(e.target.value)\n//     }\n//     return(\n//         <form>\n//             <input\n//                 type = 'text'\n//                 placeholder='Add Todo'\n//                 value={value}\n//                 onChange={handleChange}\n//             />\n//             <button onClick={handleAdd}>Add</button>\n//         </form>\n//     )\n// }\n\nclass Form extends Component {\n    // static contextType = WholeContext;\n  \n    // state = {\n    //   text: \"\"\n    // };\n  \n    constructor (props){\n      super(props)\n      this.state={\n          text:''\n      }\n      \n      this.onChange= this.onChange.bind(this)\n      this.onSubmit = this.onSubmit.bind(this)\n    }\n    onChange(e){\n      this.setState({text:e.target.value})\n    }\n    onSubmit(e){\n      e.preventDefault();\n      const text= {\n        text: this.state.text\n      }\n      this.props.addPost(text)\n      this.setState({text:\"\"})\n    }\n    render() {\n      // const { text } = this.state;\n      // const { todo,dispatch } = this.context;\n  \n      return (\n        // <form\n        //   onSubmit={this.onSubmit}\n        // >\n        //   <input\n        //     value={this.state.text}\n        //     onChange={this.onChange}\n        //   />\n        //   <input type=\"submit\" value=\"Add\" />\n        // </form>\n        <View style={{\n          backgroundColor: this.state.text,\n          //borderBottomColor: '#ffffff',\n          //borderBottomWidth: 1 ,\n          flexDirection:\"column\",\n          //flex:2\n        }}\n        >\n          <TextInput \n            editable = {true}\n            maxLength = {40}\n            multiline = {true}\n            numberOfLines = {4}\n            onChangeText={(text) => this.setState({text})}\n            value={this.state.text}\n            onChange={this.onChange}\n            style={{\n              margin:1,\n              borderColor:'#cfcfcf',\n              borderWidth:1,\n              // shadowColor: 'rgba(1, 1, 1, 1)',\n              // shadowOffset: {width: 0, height: 0},\n              // shadowRadius: 1,\n              color:'black',\n              // textShadowColor: 'rgba(1, 1, 1, 1)',\n              // textShadowOffset: {width: 0, height: 0},\n              // textShadowRadius: 5\n            }}\n          />\n          <TouchableOpacity\n            onPress={this.onSubmit}\n            style={{\n              height:22,\n              backgroundColor:'#ffffff',\n              alignItems:'center',\n              justifyContent:'center',\n              margin:1,\n              borderColor:'#cfcfcf',\n              borderWidth:1,\n              //shadowColor: 'rgba(1, 1, 1, 1)',\n              //shadowOffset: {width: 0, height: 0},\n              //shadowRadius: 20\n            }}\n          >\n            <Text style={{\n              color:'black',\n              fontSize:12,\n              paddingBottom:2,\n              //textShadowColor: 'rgba(1, 1, 1, 1)',\n              //textShadowOffset: {width: 0, height: 0},\n              //textShadowRadius: 20,\n            }}>add</Text>\n          </TouchableOpacity>\n        </View>\n      );\n    }\n  }\n  Form.propTypes={\n    addPost:PropTypes.func.isRequired\n  }\n  export default connect(null,{addPost})(Form)","import React, { Component,Context } from 'react';\nimport Form from './Form'\nconst Post=(props)=>{\n    return (\n        <div key={props.id}>\n            <p >{props.material}</p>\n        </div>\n    )\n}\n\nclass Posts extends Component{\n\n    render(){\n        return(\n            this.props.posts.map((post, i)=>\n                <div>\n                    <Post id={i} meterial={post}/>\n                </div>\n            )\n        )\n    }\n} \n    \n\n\n    \n\n    \n\n\nexport default () => {\n  return (\n    <div>     \n      <Posts/>\n      <Form />\n    </div>\n  );\n};\n","import React,{memo }from 'react'\nimport {Text,View} from 'react-native'\nconst NoMatch = () => (\n  <View style={{\n    margin:1,\n    borderColor:'#cfcfcf',\n    borderWidth:1,\n    // shadowColor: 'rgba(1, 1, 1, 1)',\n    // shadowOffset: {width: 0, height: 0},\n    // shadowRadius: 20,\n    backgroundColor:'#ffffff',\n    alignItems:'center',\n    justifyContent:'space-evenly',\n    height:22\n  }}>\n  <Text style={{          \n  \n      height:50,\n \n      flexDirection:'row',\n      flex:1,\n      fontSize:12,\n \n      color:'black',\n      // textShadowColor: 'black',\n      // textShadowOffset: {width: 0, height: 0},\n      // textShadowRadius: 20\n    }}>\n    No Match\n  </Text>\n  </View>\n)\n\nexport default memo(NoMatch)\n","import React, { Component,memo } from 'react';\nimport { BrowserRouter,HashRouter, Route, Link,Router,Switch } from \"react-router-dom\";\nimport NavBar from './NavBar'\nimport Todo from './Todo'\nimport Home from './Home'\nimport NoMatch from './NoMatch'\n// import Map from './Map'\n// import Catalogue from './screens/CatalogueScreen'\n// import Category from './screens/CategoryScreen'\n// import Product from './screens/ProductScreen'\n// class RouterElement extends Component {\n//     render() {\n//         return (\n//             <BrowserRouter>\n//                 <Switch>\n//                     <Route exact path=\"/\" component={Home} />\n//                     <Route exact path=\"/todo\" render={()=><Todo itemsChanged={handleItems} items={state.items}/>}>\n//                     </Route>\n//                     <Route exact path=\"/map\" component={Map}/>\n//                     <Route component={NoMatch} />\n//                 </Switch>\n//                 <NavBar />\n//             </BrowserRouter>\n//         );\n//     }\n// }\nclass RouterElement extends Component {\n    render() {\n        return (\n            <BrowserRouter>\n                <Switch>\n                    <Route exact path=\"/\" component={Home} />\n                    <Route exact path=\"/todo\" component={Todo}/>\n                    <Route exact path=\"/map\" component={Map}/>\n                    {/* <Route exact path=\"/Catalogue\" component={Catalogue} />\n                    <Route exact path=\"/Category\" component={Category}/>\n                    <Route exact path=\"/Product\" component={Product}/> */}\n                    <Route component={NoMatch} />\n                </Switch>\n                <NavBar />\n            </BrowserRouter>\n        );\n    }\n}\nexport default memo(RouterElement);","//import React,{Component,Context,useContext,useState,useEffect} from 'react';\nimport React,{Component,useContext,useState,useEffect} from 'react';\nimport {Animated,PanResponder} from 'react-native'\n//import logo from './logo.svg';\n//import './App.css';\nimport Header from './components/Header'\nimport Home from './components/Home'\nimport Posts from './components/Posts'\nimport AddPost from './components/AddPost'\nimport Swiper from './components/Swiper'\nimport NavBar from './components/NavBar'\nimport ScrollableHeader from './components/ScrollableHeader'\nimport HorizontalSwipeElements from './components/HorizontalSwipeElements'\nimport SwipeableList from './components/SwipeableList'\nimport SwipeableScroller from './components/SwipeableScroller'\nimport RouterElement from './components/RouterElement'\n// testimport NavigationV3 from './components/Navigationv3'\n//import {FlatList} from 'react'\nimport {ContextController,Context} from './context'\n//import { Context } from \"./context\";\nimport {View,Text,ScrollView,Dimensions,Platform,SafeAreaView,StyleSheet,KeyboardAvoidingView} from 'react-native'\nconst instructions = Platform.select({\n  ios: 'Press Cmd+R to reload,\\n' + 'Cmd+D or shake for dev menu',\n  android: 'Double tap R on your keyboard to reload,\\n' + 'Shake or press menu button for dev menu',\n});\nconst translateY = new Animated.Value(0);\n\nvar star=0\nconst _panResponder = PanResponder.create({\n  onMoveShouldSetResponderCapture: () => true,\n  onMoveShouldSetPanResponderCapture: () => true,\n  onPanResponderMove: (e,gestureState)=>{\n    translateY.setValue(gestureState.dy) \n    console.log(star+translateY._value)  \n  } ,\n\n  onPanResponderRelease: (e, {vy, dy}) => {\n    star+=dy\n    console.log(star)\n  }\n});\n// class App extends Component {\n\nconst App = (props)=>{\n  //const [state, setState] = useContext(Context);\n  // const makeRemoteRequest = () => {\n  //     if(state.data!=[]){\n  //       const { page, seed } = state;\n  //       const url = `https://randomuser.me/api/?seed=${seed}&page=${page}&results=20`;\n  //       setState({ loading: true });\n\n  //       fetch(url)\n  //         .then(res => res.json())\n  //         .then(res => {\n  //           //console.log(res.results)\n  //           var copy =[...res.results]\n  //           var indexed =[]\n  //           for (var i =0; i<copy.length;i++){\n  //             indexed[i]={...copy[i],index:i}\n  //           }\n          \n  //           setState({\n  //             //data: page === 1 ? res.results : [...state.data, ...res.results],\n  //             data:[...state.data,...indexed],\n  //             error: res.error || null,\n  //             loading: false,\n  //             refreshing: false\n  //           });\n  //         })\n  //         .catch(error => {\n  //           setState({ error, loading: false });\n  //         });\n  //       console.log('some how this ran')\n  //     }   \n  //   };\n  useEffect(()=>{\n    // console.log('somehow this ran in the App useEffect method!!')\n  })\n  \n  // componentDidMount() {\n  //  // window.scrollTo(0, 0)\n    \n  // }\n  // click(string){\n  //   alert(string)\n  // }\n  // render(){\n    const logger=(e)=>{\n      //console.log(e.nativeEvent.contentOffset.y)\n      \n    }\n    return(\n     \n      <ContextController>\n      \n        <SafeAreaView>\n          \n         <View style={{backgroundColor:'transparent',flexDirection:'column',margin:0,padding:0}}>\n            \n            <RouterElement/>\n           \n          </View>\n        </SafeAreaView>\n      \n      </ContextController>\n    )\n  // }\n}\n\nconst appStyle = {\n  flex:1,\n  margin:0,\n  borderColor:'#000000',\n  //borderWidth:5,\n  // shadowColor: 'rgba(1, 1, 1, 1)',\n  // shadowOffset: {width: 0, height: 0},\n  // shadowRadius: 20,\n  backgroundColor:'#ffffff',\n  alignItems:'center',\n  justifyContent:'space-evenly',\n  height:22,\n};\nexport default App;\n\n\n\n\n// import React, { Component } from \"react\";\n// import {\n//   AppRegistry,\n//   StyleSheet,\n//   Text,\n//   View,\n//   FlatList,\n//   AsyncStorage,\n//   Button,\n//   TextInput,\n//   Keyboard,\n//   Platform\n// } from \"react-native\";\n\n// const isAndroid = Platform.OS == \"android\";\n// const viewPadding = 10;\n\n// export default class TodoList extends Component {\n//   state = {\n//     tasks: [],\n//     text: \"\"\n//   };\n\n//   changeTextHandler = text => {\n//     setState({ text: text });\n//   };\n\n//   addTask = () => {\n//     let notEmpty = state.text.trim().length > 0;\n\n//     if (notEmpty) {\n//       this.setState(\n//         prevState => {\n//           let { tasks, text } = prevState;\n//           return {\n//             tasks: tasks.concat({ key: tasks.length, text: text }),\n//             text: \"\"\n//           };\n//         },\n//         () => Tasks.save(state.tasks)\n//       );\n//     }\n//   };\n\n//   deleteTask = i => {\n//     this.setState(\n//       prevState => {\n//         let tasks = prevState.tasks.slice();\n\n//         tasks.splice(i, 1);\n\n//         return { tasks: tasks };\n//       },\n//       () => Tasks.save(state.tasks)\n//     );\n//   };\n\n//   componentDidMount() {\n//     Keyboard.addListener(\n//       isAndroid ? \"keyboardDidShow\" : \"keyboardWillShow\",\n//       e => this.setState({ viewPadding: e.endCoordinates.height + viewPadding })\n//     );\n\n//     Keyboard.addListener(\n//       isAndroid ? \"keyboardDidHide\" : \"keyboardWillHide\",\n//       () => this.setState({ viewPadding: viewPadding })\n//     );\n\n//     Tasks.all(tasks => this.setState({ tasks: tasks || [] }));\n//   }\n\n//   render() {\n//     return (\n//       <View\n//         style={[styles.container, { paddingBottom: state.viewPadding }]}\n//       >\n//         <FlatList\n//           style={styles.list}\n//           data={this.state.tasks}\n//           renderItem={({ item, index }) =>\n//             <View>\n//               <View style={styles.listItemCont}>\n//                 <Text style={styles.listItem}>\n//                   {item.text}\n//                 </Text>\n//                 <Button title=\"X\" onPress={() => this.deleteTask(index)} />\n//               </View>\n//               <View style={styles.hr} />\n//             </View>}\n//         />\n//         <TextInput\n//           style={styles.textInput}\n//           onChangeText={this.changeTextHandler}\n//           onSubmitEditing={this.addTask}\n//           value={this.state.text}\n//           placeholder=\"Add Tasks\"\n//           returnKeyType=\"done\"\n//           returnKeyLabel=\"done\"\n//         />\n//       </View>\n//     );\n//   }\n// }\n\n// let Tasks = {\n//   convertToArrayOfObject(tasks, callback) {\n//     return callback(\n//       tasks ? tasks.split(\"||\").map((task, i) => ({ key: i, text: task })) : []\n//     );\n//   },\n//   convertToStringWithSeparators(tasks) {\n//     return tasks.map(task => task.text).join(\"||\");\n//   },\n//   all(callback) {\n//     return AsyncStorage.getItem(\"TASKS\", (err, tasks) =>\n//       this.convertToArrayOfObject(tasks, callback)\n//     );\n//   },\n//   save(tasks) {\n//     AsyncStorage.setItem(\"TASKS\", this.convertToStringWithSeparators(tasks));\n//   }\n// };\n\n// const styles = StyleSheet.create({\n//   container: {\n//     flex: 1,\n//     justifyContent: \"center\",\n//     alignItems: \"center\",\n//     backgroundColor: \"#F5FCFF\",\n//     padding: viewPadding,\n//     paddingTop: 20\n//   },\n//   list: {\n//     width: \"100%\"\n//   },\n//   listItem: {\n//     paddingTop: 2,\n//     paddingBottom: 2,\n//     fontSize: 18\n//   },\n//   hr: {\n//     height: 1,\n//     backgroundColor: \"gray\"\n//   },\n//   listItemCont: {\n//     flexDirection: \"row\",\n//     alignItems: \"center\",\n//     justifyContent: \"space-between\"\n//   },\n//   textInput: {\n//     height: 40,\n//     paddingRight: 10,\n//     paddingLeft: 10,\n//     borderColor: \"gray\",\n//     borderWidth: isAndroid ? 0 : 1,\n//     width: \"100%\"\n//   }\n// });","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
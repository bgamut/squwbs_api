{"version":3,"sources":["components/Header.js","components/HorizontalSwipeElements.js","context.js","components/SwipeableCard.js","components/SwipeableList.js","components/SwipeableScroller.js","components/Swiper.js","components/AddPost.js","components/Home.js","components/Posts.js","actions/postActions.js","components/screens/CatalogueScreen.js","components/screens/CategoryScreen.js","components/screens/ProductScreen.js","components/Navigator.js","components/screens/SearchScreen.js","components/screens/SearchResultsScreen.js","components/screens/BagScreen.js","components/NavBar.js","components/Todo.js","components/NoMatch.js","components/RouterElement.js","App.js","serviceWorker.js","index.js"],"names":["require","name","styles","Dimensions","get","width","height","Animated","Value","StyleSheet","create","container","flex","backgroundColor","sliderContainer","overflow","position","controlsWrapperStyle","alignItems","justifyContent","right","bottom","padding","dotsWrapperStyle","activeDotStyle","borderRadius","marginLeft","marginRight","marginTop","marginBottom","dotStyle","prevButtonStyle","color","nextButtonStyle","Component","Context","React","createContext","ContextController","_ref","children","intialState","posts","random","yscroll","headerHeight","loading","data","page","seed","error","refreshing","closedIndices","index","dataManipulated","filteredData","dy","horizontalscroll","_useState","useState","_useState2","Object","slicedToArray","state","setState","react_default","a","createElement","Provider","value","SwipeableCard","props","_useContext","useContext","_useContext2","style","dragPos","ValueXY","x","y","_panResponder","PanResponder","onMoveShouldSetResponderCapture","onMoveShouldSetPanResponderCapture","onPanResponderMove","e","gestureState","setValue","dx","onPanResponderRelease","vx","screenWidth","Math","abs","sequence","spring","toValue","duration","start","itemIndex","filtered","filter","item","objectSpread","toConsumableArray","dismiss","bounciness","View","assign","left","panHandlers","TouchableOpacity","onPress","console","log","flexDirection","Image","source","uri","picture","Text","selectable","String","name_first","name_last","email","DefaultFlatList","useEffect","url","concat","fetch","then","res","json","copy","results","indexed","i","length","catch","makeRemoteRequest","UIManager","setLayoutAnimationEnabledExperimental","borderTopWidth","borderBottomWidth","FlatList","renderItem","components_SwipeableCard","first","last","thumbnail","keyExtractor","scrollEventThrottle","onEndReachedThreshold","SwipeableScroller","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onScroll","scroller","createRef","lastscroll","ScrollView","ref","scrollEnabled","margin","paddingRight","paddingLeft","Swiper","activeIndex","pan","_animatedValueX","_animatedValueY","onPanResponderTerminationRequest","swipingEnabled","onAnimationStart","allow","direction","stopAutoplay","onPanResponderGrant","_fixState","event","gesture","correction","moveX","x0","moveY","y0","startAutoplay","actionMinWidth","onAnimationEnd","_changeIndex","_this2","addListener","removeAllListeners","_this3","autoplayTimeout","autoplay","setTimeout","moveUpDown","clearTimeout","down","arguments","undefined","setOffset","_this4","delta","move","skipChanges","calcDelta","loop","count","onIndexChanged","_this5","_event$nativeEvent$la","nativeEvent","layout","_this6","_this$state","_this$props","containerStyle","swipeAreaStyle","swipeWrapperStyle","dotElement","activeDotElement","prevButtonElement","prevButtonText","nextButtonElement","nextButtonText","buttonsEnabled","onLayout","_onLayout","bind","overRangeButtonsOpacity","Array","isArray","top","transform","translateX","translateY","map","el","key","opacity","disabled","defaultProps","AddPost","addTodo","text","alert","borderColor","borderWidth","TextInput","className","editable","autoCorrect","blurOnSubmit","maxLength","multiline","numberOfLines","caretHidden","onChangeText","keyboardType","onChange","userInput","target","inputType","onSubmitEditing","returnKeyType","clearButtonMode","autoFocus","theme","colors","placeholder","primary","underlineColor","background","type","fontSize","paddingBottom","Home","components_SwipeableScroller","Swiper_Swiper","SwipeableList","KeyboardAvoidingView","behavior","enabled","felxDirection","components_AddPost","horizontal","Posts","nextProps","newPost","unshift","postItems","post","connect","items","fetchPosts","dispatch","payload","CatalogueScreen","nextState","prevProps","prevState","react_router_dom","id","to","CategoryScreen","ProductScreen","Nav","createSwitchNavigator","catalogue","category","product","defaultNAvigationOptions","headerStyle","Navigator","createBrowserApp","memo","box","_box","defineProperty","link","textDecorationLine","NavBar","href","Post","material","Todo_Post","meterial","Todo","Todo_Posts","RouterElement","react_router","exact","path","component","Map","NoMatch","components_NavBar","Platform","select","ios","android","star","App","_value","vy","SafeAreaView","components_RouterElement","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fd0c9ea9.chunk.js","sourcesContent":["import React from 'react'; \n//import {WholeContext} from \"../WholeContext\"\nvar {name} =require( '../../package.json')\n\n\n\nfunction Header () {\n  \n    return(\n        <div style={divStyle}>        \n            <p style ={pStyle} >\n                {name}\n            </p>\n        </div>\n    \n    ) \n};\n\nconst divStyle = {\n    flex:1,\n    margin:1,\n    borderColor:'#000000',\n    borderWidth:5,\n    // shadowColor: 'rgba(1, 1, 1, 1)',\n    // shadowOffset: {width: 0, height: 0},\n    // shadowRadius: 20,\n    backgroundColor:'#ffffff',\n    alignItems:'center',\n    justifyContent:'space-evenly',\n    height:22,\n};\n  const pStyle = {\n    color:'black',\n    fontSize: 12,\n    //textAlign: 'center',\n    // textShadowColor: 'rgba(1, 1, 1, 1)',\n    // textShadowOffset: {width: 0, height: 0},\n    // textShadowRadius: 20\n  };\n\n\nexport default (Header)","// import React, {memo,useContext} from 'react'\n// import {Text,View,Dimensions,ScrollView,PanResponder,Animated} from 'react-native'\n// import {Context} from '../context'\n\nimport React,{Component} from 'react'\nimport {\n  StyleSheet, \n  View, \n  ViewPropTypes,\n  Text,\n  Animated, \n  PanResponder,\n  TouchableOpacity,\n  Dimensions\n} from 'react-native'\nimport PropTypes from \"prop-types\"\nconst width = Dimensions.get('window').width\nconst height = Dimensions.get('window').height\nconst _animatedValue = new Animated.Value(0);\nconst styles = StyleSheet.create({\n  container: {\n      flex: 1,\n      backgroundColor: \"transparent\",\n  },\n  sliderContainer: {\n      backgroundColor: \"transparent\",\n      overflow: \"hidden\",\n      position: \"relative\",\n      flex: 1,\n  },\n  controlsWrapperStyle: {\n      position: \"absolute\",\n      alignItems: \"center\",\n      justifyContent: \"space-between\",\n      right: 0,\n      bottom: 0,\n      padding: 10\n  },\n  dotsWrapperStyle: {\n      alignItems: \"center\",\n      justifyContent: \"center\"\n  },\n  activeDotStyle: {\n      backgroundColor: '#007aff',\n      width: 8,\n      height: 8,\n      borderRadius: 4,\n      marginLeft: 3,\n      marginRight: 3,\n      marginTop: 3,\n      marginBottom: 3\n  },\n  dotStyle: {\n      backgroundColor: 'rgba(0,0,0,.2)',\n      width: 8,\n      height: 8,\n      borderRadius: 4,\n      marginLeft: 3,\n      marginRight: 3,\n      marginTop: 3,\n      marginBottom: 3\n  },\n  prevButtonStyle: {\n      color: '#777777'\n  },\n  nextButtonStyle: {\n      color: '#007aff'\n  },\n});\n\nexport default class HorizontalSwipeElements extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n        width: Dimensions.get('window').width,\n        height: 200,\n        activeIndex: props.index,\n        pan: new Animated.ValueXY(),\n    };\n    this._animatedValueX=0;  \n    this._animatedValueY=0;\n    this._panResponder = PanResponder.create({\n      onPanResponderTerminationRequest:()=>false,\n      onMoveShouldSetPanResponderCapture:()=>true,\n      onMoveShouldSetPanResponderCapture:(e,gestureState)=>{\n       return(Math.abs(gestureState.dx)>5)\n      },\n      onPanResponderGrant:(e,gestureState)=>{this._fixState()},\n      onPanResponderMove:Animated.event([\n        null, {dx:this.state.pan.x}\n      ]),\n      onPanResponderRelease:(e,gesture)=>{\n        const correction=gesture.moveX-gesture.x0\n        if(Math.abs(correction)<(this.state.width*this.props.actionMinWidth)){\n          return Animated.spring(this.state.pan,{toVlue:{x:0,y:0}}).start(()=>{\n            if(this.props.onAnimationEnd){\n              this.props.onAnimationEnd(this.state.activeIndex);\n            }\n          })\n          this._changeIndex(correction>0 ? -1 :1)\n        }\n      }\n    })\n  }\n  componentDidMount(){\n    this.state.pan.x.addListener((value)=> this._animatedValueX=value.value)\n    //this.startAutoplay()\n  }\n  componentWillUnmount(){\n    //this.stopAutoplay()\n    this.state.pan.x.removeAllListeners()\n  }\n  _fixState(){\n    this._animatedValueX=this.state.width*this.state.activeIndex*-1\n    this.state.pan.setOffset({x:this._animatedValueX, y:0})\n    this.state.pan.setValue({x:0,y:0})\n  }\n  _changeIndex(delta=1){\n    let move = {x:0,y:0}\n    let skipChange=(!delta)\n    let calcDelta = delta\n    if(this.state.activeIndex<=0 && delta<0){\n      skipChange=(!this.props.loop)\n      calcDelta = this.count+delta\n    } else if(this.state.activeIndex+1>=this.cound &&delta>0){\n      skipChange=(!this.props.loop)\n      calcDelta=-1*this.state.activeIndex+delta-1\n    }\n    if(skipChange){\n      return Animated.spring(this.state.pan,{toValue:move}).start(()=>{\n        if(this.props.onAnimationEnd){\n          this.props.onAnimationEnd(this.state.activeIndex)\n        }\n      })\n    }\n    let index = this.state.activeIndex+calcDelta\n    this.setState({activeIndex:index})\n    move.x=this.state.width*-1*calcDelta\n    Animated.spring(this.state.pan,{toValue:move}).start(()=>{\n      if(this.props.onAnimationEnd){\n        this.props.onAnimationEnd(index)\n      }\n    })\n    //this.startAutoplay();\n    this.props.onIndexChanged && this.props.onIndexChanged(index)\n  }\n  _onLayout(e){\n    console.log(e.nativeEvent.layout)\n    const {width,height}=e.nativeEvent.layout\n    this.setState({width,height},()=>this._fixState())\n  }\n\n  render(){\n    const {pan,width,height,activeIndex}=this.state\n    const {\n      direction,\n      containerStyle,\n      swipeAreaStyle,\n      swipeWrapperStyle,\n      controlsWrapperStyle,\n      dotsWrapperStyle,\n      dotElement,\n      dotStyle,\n      activeDotElement,\n      activeDotStyle,\n      prevButtonElement,\n      prevButtonStyle,\n      prevButtonText,\n      nextButtonElement,\n      nextButtonStyle,\n      nextButtonText,\n      loop,\n      buttonsEnabled,\n    } = this.props;\n    if (!width){\n      return (<View style={[styles.container, containerStyle]} onLayout={this._onLayout.bind(this)}/>)\n    }\n    const overRangeButtonOpacity = !loop? this.props.overRangeButtonOpacity: this.props.overRangeButtonsOpacity|| 1;\n    let {children}=this.props;\n    if(!Array.isArray(children)){children=[children]}\n    this.count=children.length\n    return(\n      <View style={[styles.container,containerStyle]} onLayout={this._onLayout.bind(this)}>\n        <View style={[styles.sliderContainer,swipeAreaStyle]}>\n          <Animated.View\n            style={[{\n              position:\"relative\",\n              top:0,\n              left:0,\n            },swipeWrapperStyle,{\n              flexDirection:direction,\n              width:width*this.count*width,\n              height:height\n            },{transform:[{translateX:pan.x},{translateY:pan.y}]}\n            ]}\n            {...this._panResponder.panHandlers}\n            >\n              {children.map((el,i)=>(<View key={i} style={{width,height}}>{el}</View>))}\n          </Animated.View>\n        </View>\n      </View>\n    )\n  }\n}\n//     <Animated.View style={{\n//       position: \"relative\",\n//       top: 0,\n//       //left: _animatedValue._value,\n//       flexDirection: 'row',\n//       width: width*2,\n//       height: height,\n//       transform:[{translateX:_animatedValue._value}]\n//       }}\n//       {..._panResponder.panHandlers} \n//       horizontal = {true}>\n// <View style={{height:Dimensions.get('window').height/15,width:(Dimensions.get('window').height)/12,backgroundColor:'white',flex:1,flexDirection:'column',marginRight:2,marginLeft:3}}>\n// <Text selectable={false}>one</Text>\n// </View>\n// <View style={{height:Dimensions.get('window').height/15,width:(Dimensions.get('window').height)/12,backgroundColor:'lightgrey',flex:1,flexDirection:'column',marginRight:2,marginLeft:2}}>\n// <Text selectable={false}>two</Text>\n// </View>\n// <View style={{height:Dimensions.get('window').height/15,width:(Dimensions.get('window').height)/12,backgroundColor:'darkgrey',flex:1,flexDirection:'column',marginRight:2,marginLeft:2}}>\n// <Text selectable={false}>three</Text>\n// </View>\n// <View style={{height:Dimensions.get('window').height/15,width:(Dimensions.get('window').height)/12,backgroundColor:'black',flex:1,flexDirection:'column',marginRight:2,marginLeft:2}}>\n// <Text selectable={false}>four</Text>\n// </View>\n// <View style={{height:Dimensions.get('window').height/15,width:(Dimensions.get('window').height)/12,backgroundColor:'white', flex:1,flexDirection:'column',marginRight:2,marginLeft:2}}>\n// <Text selectable={false}>one</Text>\n// </View>\n// <View style={{height:Dimensions.get('window').height/15,width:(Dimensions.get('window').height)/12,backgroundColor:'lightgrey',flex:1,flexDirection:'column',marginRight:2,marginLeft:2}}>\n// <Text selectable={false}>two</Text>\n// </View>\n// <View style={{height:Dimensions.get('window').height/15,width:(Dimensions.get('window').height)/12,backgroundColor:'darkgrey',flex:1,flexDirection:'column',marginRight:2,marginLeft:2}}>\n// <Text selectable={false}>three</Text>\n// </View>\n// <View style={{height:Dimensions.get('window').height/15,width:(Dimensions.get('window').height)/12,backgroundColor:'black',flex:1,flexDirection:'column',marginRight:2,marginLeft:2}}>\n// <Text selectable={false}>four</Text>\n// </View>\n// </Animated.View>\n//   )\n\n// }\n\n","import React, { useState, useEffect } from \"react\";\nimport {Animated} from \"react-native\"\nexport const Context = React.createContext();\n\n\nexport function ContextController({ children }) {\n  let intialState = {\n    posts: [],\n    //data:[[0,1],[1,2]],\n    random: \"\",\n    //yscroll: new Animated.Value(0),\n    yscroll:0,\n    headerHeight:22,\n    loading: true,\n    data: [],\n    page: 1,\n    seed: 1,\n    error: null,\n    refreshing: false,\n    closedIndices:[],\n    index:0,\n    dataManipulated:false,\n    filteredData:[],\n    dy: new Animated.Value(0),\n    horizontalscroll:new Animated.Value(0)\n  };\n\n  const [state, setState] = useState(intialState);\n\n  return (\n    <Context.Provider value={[state, setState]}>{children}</Context.Provider>\n  );\n}","import React,{Component,useContext} from 'react';\nimport {Animated,PanResponder,Dimensions,View,Text,Image,TouchableOpacity} from 'react-native'\nimport { Context } from \"../context\";\n\n// export class SwipeableCard extends Component {\n   \n//     translateX = new Animated.Value(0);\n//     _panResponder = PanResponder.create({\n//       onMoveShouldSetResponderCapture: () => true,\n//       onMoveShouldSetPanResponderCapture: () => true,\n//       onPanResponderMove: Animated.event([null, {dx: this.translateX}]),\n//       onPanResponderRelease: (e, {vx, dx}) => {\n//         //const [state, setState] = useContext(Context);\n\n//         const screenWidth = Dimensions.get(\"window\").width;\n//         if (Math.abs(vx) >= 0.5 || Math.abs(dx) >= 0.5 * screenWidth) {\n//           Animated.timing(this.translateX, {\n//             toValue: dx > 0 ? screenWidth : -screenWidth,\n//             duration: 200\n//           }).start(this.props.onDismiss);\n//           //console.log(\"yo this element's index was \"+this.props.name_first)\n//           //setState()\n//         } else {\n//           Animated.spring(this.translateX, {\n//             toValue: 0,\n//             bounciness: 10\n//           }).start();\n//         }\n//       }\n//     });\n//     onPress(){\n        \n//         //console.log(this.state)\n//     }\n//     render() {\n//     //const [state, setState] = useContext(Context);\n//       return (\n//         <View>\n//             <Animated.View\n//                 style={{transform: [{translateX: this.translateX}], height: 75}} {...this._panResponder.panHandlers}\n//             >\n//                 {/* <Text>\n//                     {this.props.title}\n//                 </Text> */}\n//                 <TouchableOpacity onPress={\n//                     console.log(this.props)\n                    \n//                 }>\n//                     <View \n//                     style={{\n//                         flex:1,\n//                         flexDirection:'row'\n//                     }}\n//                     >\n//                     <View>\n//                     <Image\n//                         style={{width: 50, height: 50}}\n//                         source={{uri: this.props.picture}}\n//                     />\n//                     </View>\n//                     <View>\n//                     <Text selectable={false}>\n//                         {String(this.props.name_first) +\" \" +String(this.props.name_last)}\n//                     </Text>\n//                     <Text selectable={false}>\n//                         {this.props.email}\n//                     </Text>\n//                     </View>\n//                     </View>\n//                 </TouchableOpacity>\n//             </Animated.View>\n//         </View>\n  \n//       );\n//     }\n//   }\n\nconst SwipeableCard = (props) => {\n    const [state, setState] = useContext(Context);\n    // const dismiss= (itemIndex)=>{\n    //   var filtered= []\n    //   var appliedIndex=0\n    //   for (var i = 0; i<state.data.length; i++){\n    //     if(itemIndex!=i){\n    //       filtered.push({...state.data[i],index:appliedIndex})\n    //       appliedIndex++\n    //     }\n    //   }\n\n    //   console.log(filtered)\n    //   setState({\n    //     ...state,\n    //     data:[...filtered]\n    //   })\n      \n    // }\n    const dismiss= (itemIndex)=>{\n      // console.log('dismiss fired')\n      // setState({\n      //   ...state,\n      //   refreshing:true\n      // })\n      \n      \n        // var filtered= []\n        // for (var i = 0; i<state.data.length; i++){\n        //   if(itemIndex!=i){\n        //     filtered.push({...state.data[i],index:i})\n        //   }\n        // }\n        //console.log(translateX)\n        \n        var filtered =state.filteredData.filter(item => item.index !== itemIndex);\n        // for (var i=0;i<filtered.length;i++){\n        //   filtered[i].index=i\n        // }\n        // console.log(filtered)\n        setState({\n          ...state,\n          filteredData:[...filtered],\n          dataManipulated:true,\n          refreshing:false\n        })\n        //console.log(state.filteredData)\n        \n    }\n    const style={\n      height:55,\n\n    }\n    //const [userInput,setUserInput,Refs] = useState(\"\")\n    const dragPos = new Animated.ValueXY({x:0,y:style.height});\n    const translateX = new Animated.Value(0);\n    const translateY=new Animated.Value(0)\n    const _panResponder = PanResponder.create({\n      onMoveShouldSetResponderCapture: () => true,\n      onMoveShouldSetPanResponderCapture: () => true,\n      onPanResponderMove: (e,gestureState)=>{\n        //translateX.setValue(gestureState.dx)\n        //Animated.event([null, {dx: translateX}])\n        dragPos.setValue({x:gestureState.dx,y:style.height})\n        //translateY.setValue(state.dy._value+gestureState.dy)\n        //console.log(translateX._value)\n        //console.log(position.x._value +\" : \"+position.y._value)\n        //setState({...state,dy:translateY})\n        //console.log(state.dy)\n      } ,\n      // onPanResponderRelease: (e, {vx, dx}) => {\n      //   //const [state, setState] = useContext(Context);\n      //   console.log(dx)\n      //   const screenWidth = Dimensions.get(\"window\").width;\n      //   if (Math.abs(vx) >= 0.5 || Math.abs(dx) >= 0.5 * screenWidth) {\n      //     Animated.timing(translateX, {\n      //       toValue: dx > 0 ? screenWidth : -screenWidth,\n      //       duration: 200\n      //     // }).start(props.onDismiss);\n      //   }).start(\n          \n      //     dismiss(props.index)\n          \n      //     );\n      //     //console.log(\"yo this element's index was \"+props.name_first)\n      //     //setState()\n      //   } else {\n      //     Animated.spring(translateX, {\n      //       toValue: 0,\n      //       bounciness: 10\n      //     }).start();\n      //   }\n      // }\n      onPanResponderRelease: (e, {vx, dx}) => {\n        //const [state, setState] = useContext(Context);\n        //console.log(dx)\n        const screenWidth = Dimensions.get(\"window\").width;\n        if (Math.abs(vx) >= 0.35 || Math.abs(dx) >= 0.35 * screenWidth) {\n          Animated.sequence([\n            Animated.spring(dragPos, {\n              toValue: dx > 0 ? {x:screenWidth,y:style.height} : {x:-screenWidth,y:style.height },\n              duration: 250\n              \n            // }).start(props.onDismiss);\n          }),\n          Animated.spring(dragPos,{\n            toValue: dragPos.x > 0 ?{x:screenWidth,y:0} : {x:-screenWidth,y:0},\n            // duration:750\n          }).start(\n            ()=>\n            {\n              dismiss(props.index)\n              // Animated.timing(position, {\n              //   toValue: dx > 0 ? {x:screenWidth,y:0} : {x:-screenWidth,y:0 },\n              //   duration: 200\n              // }).start()\n            }\n            \n          )\n            //console.log(\"yo this element's index was \"+props.name_first)\n            //setState()\n          ])\n          \n        } else {\n          Animated.spring(dragPos, {\n            toValue: {x:0,y:style.height},\n            bounciness: 10\n          }).start();\n        }\n      }\n    });\n        const onPress=(e)=>{\n            console.log(props)\n        }\n    \n      return (\n      \n            <View>\n                <Animated.View\n                    style={{left:dragPos.x,height:dragPos.y}} {..._panResponder.panHandlers}\n                >\n                    {/* <Text>\n                        {props.title}\n                    </Text> */}\n                    <TouchableOpacity onPress={\n                        onPress\n                        \n                    }>\n                        <View \n                        style={{\n                            flex:1,\n                            flexDirection:'row'\n                        }}\n                        >\n                        <View>\n                        <Image\n                            style={{width: 50, height: 50}}\n                            source={{uri: props.picture}}\n                        />\n                        </View>\n                        <View>\n                        <Text selectable={false}>\n                            {String(props.name_first) +\" \" +String(props.name_last)}\n                        </Text>\n                        <Text selectable={false}>\n                            {props.email}\n                        </Text>\n                        </View>\n                        </View>\n                    </TouchableOpacity>\n                </Animated.View>\n            </View>\n      \n          \n      );\n};\n    \nexport default SwipeableCard;","//modified from\n//https://medium.com/react-native-development/how-to-use-the-flatlist-component-react-native-basics-92c482816fe6\nimport React, { Component,pureComponent,memo ,useContext,useEffect} from \"react\";\nimport { View, Text, FlatList, ActivityIndicator ,Image, LayoutAnimation,UIManager} from \"react-native\";\nimport SwipeableCard from \"./SwipeableCard\";\n\n//import { List, ListItem, SearchBar } from \"react-native-elements\";\nimport { Context } from \"../context\";\n\n\n// class DefaultFlatList extends Component {\n//   constructor(props) {\n//     super(props);\n\n//     this.state = {\n//       loading: false,\n//       data: [],\n//       page: 1,\n//       seed: 1,\n//       error: null,\n//       refreshing: false,\n//       closedIndices:[],\n//       index:0\n//     };\n//   }\n\n//   componentDidMount() {\n//     this.makeRemoteRequest();\n//     UIManager.setLayoutAnimationEnabledExperimental && UIManager.setLayoutAnimationEnabledExperimental(true);\n  \n//   }\n\n//   makeRemoteRequest = () => {\n//     const { page, seed } = this.state;\n//     const url = `https://randomuser.me/api/?seed=${seed}&page=${page}&results=20`;\n//     this.setState({ loading: true });\n\n//     fetch(url)\n//       .then(res => res.json())\n//       .then(res => {\n//         //console.log(res.results)\n//         var copy =[...res.results]\n//         var indexed =[]\n//         for (var i =0; i<copy.length;i++){\n//           indexed[i]={...copy[i],index:i}\n//         }\n//         console.log(indexed)\n//         this.setState({\n//           //data: page === 1 ? res.results : [...this.state.data, ...res.results],\n//           data:[...this.state.data,...indexed],\n//           error: res.error || null,\n//           loading: false,\n//           refreshing: false\n//         });\n//       })\n//       .catch(error => {\n//         this.setState({ error, loading: false });\n//       });\n      \n//   };\n\n//   handleRefresh = () => {\n//     this.setState(\n//       {\n//         page: 1,\n//         seed: this.state.seed + 1,\n//         refreshing: true\n//       },\n//       () => {\n//         this.makeRemoteRequest();\n//       }\n//     );\n//   };\n\n//   handleLoadMore = () => {\n//     this.setState(\n//       {\n//         page: this.state.page + 1\n//       },\n//       () => {\n//         this.makeRemoteRequest();\n//       }\n//     );\n//   };\n\n//   renderSeparator = () => {\n//     return (\n//       <View\n//         style={{\n//           height: 1,\n//           width: \"86%\",\n//           backgroundColor: \"#CED0CE\",\n//           marginLeft: \"14%\"\n//         }}\n//       />\n//     );\n//   };\n\n//   renderHeader = () => {\n//     return <View><Text> note </Text></View>;\n//   };\n\n//   renderFooter = () => {\n//     if (!this.state.loading) return null;\n\n//     return (\n//       <View\n//         style={{\n//           paddingVertical: 20,\n//           borderTopWidth: 1,\n//           borderColor: \"#CED0CE\"\n//         }}\n//       >\n//         <ActivityIndicator animating size=\"large\" />\n//       </View>\n//     );\n//   };\n//   shouldRender(index) {\n//     return this.state.closedIndices.indexOf(index) === -1\n//     LayoutAnimation.configureNext(LayoutAnimation.Presets.spring);\n//   }\n  \n//   render() {\n//     // var filtered=[]\n//     // for (var i = 0; i<this.state.data.length; i++){\n//     //     filtered.push({...this.state.data[i],index:i})\n//     // }\n//     // this.setState({...this.state,data:filtered})\n//     if(this.state.loading==true||this.state.refreshing){\n//       return (\n//         <ActivityIndicator animating size=\"large\" color/>\n//       )\n//     }\n//     else{\n//       return (\n        \n//         <View style={{ \n//           borderTopWidth: 0, \n//           borderBottomWidth: 0, \n//           }}>\n         \n             \n//               <FlatList\n                \n//                 data={this.state.data}\n//                 renderItem={({ item }) => (\n//                   // <View \n//                   //   style={{\n//                   //     flex:1,\n//                   //     flexDirection:'row'\n//                   //   }}\n//                   // >\n//                   //   <View>\n//                   //   <Image\n//                   //     style={{width: 50, height: 50}}\n//                   //     source={{uri: item.picture.thumbnail}}\n//                   //   />\n//                   //   </View>\n//                   //   <View>\n//                   //   <Text>\n//                   //     {String(item.name.first) +\" \" +String(item.name.last)}\n//                   //   </Text>\n//                   //   <Text>\n//                   //     {item.email}\n//                   //   </Text>\n//                   //   </View>\n//                   // </View>\n                  \n                  \n//                   //https://stackoverflow.com/questions/53655722/react-native-flatlist-conditional-rendering\n//                   //flatlist seems to not support conditional rendering\n  \n//                   // <SwipeableCard title={String(item.name.first) +\" \" +String(item.name.last)} onDismiss={() => {\n//                   <SwipeableCard index={item.index} name_first={String(item.name.first)} name_last = {String(item.name.last)} picture={item.picture.thumbnail} email={item.email}  onDismiss={() => { \n//                     // if ([...new Array(this.state.data.length)].slice(i + 1, this.state.data.length).some(this.shouldRender)) {\n//                     //   LayoutAnimation.configureNext(LayoutAnimation.Presets.spring);\n//                     // }\n                    \n//                     //LayoutAnimation.configureNext(LayoutAnimation.Presets.spring);\n//                     // var filtered=this.state.data.filter(function(value, index, arr){\n//                     //   console.log(value)\n//                     //   return value.index != index;\n//                     // });\n//                     this.setState({\n//                       ...this.state,\n//                       refreshing:true\n//                     })\n//                     var filtered= []\n                    \n//                     for (var i = 0; i<this.state.data.length; i++){\n//                       if(item.index!=i){\n//                         filtered.push({...this.state.data[i],index:i})\n//                       }\n         \n//                     }\n//                     this.setState({\n//                       //closedIndices: [...this.state.closedIndices, i]\n//                       ...this.state,\n//                       data:[...filtered]\n//                     })\n//                     this.setState({\n//                       ...this.state,\n//                       refreshing:false\n//                     })\n//                     // filtered=[]\n//                     // for (var i = 0; i<this.state.data.length; i++){\n                      \n//                     //   filtered.push(this.state.data[i].name.first)\n                      \n//                     // }\n//                     //console.log(filtered)\n//                     //this.forceUpdate()\n//                     //console.log(this.state.data)\n//                   }}/>\n//                 )}\n//             keyExtractor={item => item.index}\n//             //ItemSeparatorComponent={this.renderSeparator}\n//             //ListHeaderComponent={this.renderHeader}\n//             //ListFooterComponent={this.renderFooter}\n//             scrollEventThrottle={16}\n//             onRefresh={this.handleRefresh}\n//             refreshing={this.state.refreshing}\n//             //onEndReached={this.handleLoadMore}\n//             onEndReachedThreshold={50}\n//           />\n//         </View>\n//       );\n//     }\n    \n//   }\n// }\n\n// export default DefaultFlatList;\n\n\n\nconst DefaultFlatList =(props)=> {\n  const [state, setState] = useContext(Context);\n\n  useEffect(()=>{\n    \n    const makeRemoteRequest = (seed,page) => {\n        const url = `https://randomuser.me/api/?seed=${seed}&page=${page}&results=20`;\n        //setState({ loading: true });\n    \n        fetch(url)\n          .then(res => res.json())\n          .then(res => {\n            //console.log(res.results)\n            var copy =[...res.results]\n            var indexed =[]\n            for (var i =0; i<copy.length;i++){\n              indexed[i]={...copy[i],index:i}\n            }\n          \n            setState({\n              //data: page === 1 ? res.results : [...state.data, ...res.results],\n              ...state,\n              data:[...state.data,...indexed],\n              filteredData:[...state.data,...indexed],\n              error: false,\n              loading: false,\n              refreshing: false\n            });\n          })\n          .catch(error => {\n            setState({ ...state,error:true, loading: false });\n          });\n        console.log('some how this ran')    \n    };\n    // console.log('useEffect fired in defaultFlatlist')\n    const { seed, page } = state;\n    if(state.loading==true){\n      var data = makeRemoteRequest(seed,page)\n      setState({...state,data:data})\n      console.log('if part fired')\n    }\n    else{\n      console.log(state.data)\n      console.log('else part is fired')\n    }\n    UIManager.setLayoutAnimationEnabledExperimental && UIManager.setLayoutAnimationEnabledExperimental(true);\n  },[])\n  \n  \n\n  \n\n  const handleRefresh = () => {\n    // setState(\n    //   {\n    //     ...state,\n    //     page: 1,\n    //     seed: state.seed + 1,\n    //     refreshing: true\n    //   },\n    //   () => {\n    //     //makeRemoteRequest();\n    //   }\n    // );\n    console.log('refresh fired')\n  };\n\n  const handleLoadMore = () => {\n    setState(\n      {\n        page: state.page + 1\n      },\n      () => {\n        //makeRemoteRequest();\n      }\n    );\n  };\n\n  const renderSeparator = () => {\n    return (\n      <View\n        style={{\n          height: 1,\n          width: \"86%\",\n          backgroundColor: \"#CED0CE\",\n          marginLeft: \"14%\"\n        }}\n      />\n    );\n  };\n\n  const renderHeader = () => {\n    return <View><Text> note </Text></View>;\n  };\n\n  const renderFooter = () => {\n    if (!state.loading) return null;\n\n    return (\n      <View\n        style={{\n          paddingVertical: 20,\n          borderTopWidth: 1,\n          borderColor: \"#CED0CE\"\n        }}\n      >\n        <ActivityIndicator animating size=\"large\" />\n      </View>\n    );\n  };\n  const shouldRender=(index)=> {\n    return state.closedIndices.indexOf(index) === -1\n    LayoutAnimation.configureNext(LayoutAnimation.Presets.spring);\n  }\n  \n  \n    // var filtered=[]\n    // for (var i = 0; i<state.data.length; i++){\n    //     filtered.push({...state.data[i],index:i})\n    // }\n    // setState({...state,data:filtered})\n  // if(state.loading==true||state.refreshing){\n  //     return (\n  //       <ActivityIndicator animating size=\"large\" color/>\n  //     )\n  //   }\n  \n  // else{\n    \n      return (\n        <View style={{ \n          borderTopWidth: 0, \n          borderBottomWidth: 0, \n          \n          }}>\n              <FlatList \n                data={state.data}\n                renderItem={({ item }) => (\n                  // <SwipeableCard index={item.index} name_first={String(item.name.first)} name_last = {String(item.name.last)} picture={item.picture.thumbnail} email={item.email} onDismiss={dismiss(item.index)}/>\n                  <SwipeableCard index={item.index} name_first={String(item.name.first)} name_last = {String(item.name.last)} picture={item.picture.thumbnail} email={item.email}/>\n                )}\n            keyExtractor={item => item.index}\n            //ItemSeparatorComponent={renderSeparator}\n            //ListHeaderComponent={renderHeader}\n            //ListFooterComponent={renderFooter}\n            \n            scrollEventThrottle={1}\n            //onRefresh={handleRefresh}\n            //refreshing={state.refreshing}\n            //onEndReached={handleLoadMore}\n            onEndReachedThreshold={50}\n          />\n        </View>\n      );\n    //}\n    \n  \n}\n\n\nexport default DefaultFlatList","\nimport React,{Component,useContext} from 'react';\nimport {Animated,PanResponder,Dimensions,View,Text,Image,TouchableOpacity,ScrollView} from 'react-native'\nimport { Context } from \"../context\";\nconst translateY = new Animated.Value(0);\n\n\n\nclass SwipeableScroller extends Component {\n    constructor(props) {\n        super(props);\n        this.scroller=React.createRef()\n        this.state = {\n            yscroll: new Animated.Value(0),\n            dy:new Animated.Value(0),\n            lastscroll:0,\n        };\n      }\n      onScroll=(e)=>{\n        //console.log(e.nativeEvent.contentOffset.y)\n        \n      }\n//     _panResponder = PanResponder.create({\n//     onMoveShouldSetResponderCapture: () => true,\n//     onMoveShouldSetPanResponderCapture: () => true,\n//     onPanResponderMove: (e,gestureState)=>{\n//         translateY.setValue(gestureState.dy)\n\n//         // this.scroller.current.scrollTo({\n//         //     y:-1*this.state.lastscroll+translateY._value,\n//         //     animated:true,\n//         //     duration:1\n//         // })\n        \n//     },\n\n//     onPanResponderRelease: (e, {vy, dy}) => {\n//     //translateY.setValue(state.yscroll._value+dy)\n//     //console.log(this.state.yscroll+translateY._value)\n//     this.setState(\n//         (state,props)=>(\n//             {\n//                 ...this.state,\n//                 lastscroll:state.lastscroll+translateY._value}\n//         ))\n//     //console.log(this.state.yscroll)\n//   }\n// });\n    render(){\n        return(\n            <ScrollView \n            ref={this.scroller}\n            style={{backgroundColor:'transparent',height:Dimensions.get('window').height*13/15-50}}\n            onScroll={this.onScroll}\n            //scrollTop={state.yscroll}\n            scrollEnabled={false}\n            scrollEventThrottle={1}\n            // {...this._panResponder.panHandlers}\n        >\n            <View style={{backgroundColor:'transparent',flex:1,flexDirection:'column',margin:5,paddingRight:2,paddingLeft:2}}>\n                {this.props.children}\n            </View>\n        </ScrollView>\n        )\n    }\n\n}\nexport default SwipeableScroller\n","//directly downloaded from \n//https://github.com/oxyii/react-native-web-swiper\n\nimport React from \"react\";\nimport {\n    StyleSheet,\n    View,\n    ViewPropTypes,\n    Text,\n    Animated,\n    PanResponder,\n    TouchableOpacity,\n} from \"react-native\";\nimport PropTypes from \"prop-types\";\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: \"transparent\",\n    },\n    sliderContainer: {\n        backgroundColor: \"transparent\",\n        overflow: \"hidden\",\n        position: \"relative\",\n        flex: 1,\n    },\n    controlsWrapperStyle: {\n        position: \"absolute\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        right: 0,\n        bottom: 0,\n        padding: 10\n    },\n    dotsWrapperStyle: {\n        alignItems: \"center\",\n        justifyContent: \"center\"\n    },\n    activeDotStyle: {\n        backgroundColor: '#007aff',\n        width: 8,\n        height: 8,\n        borderRadius: 4,\n        marginLeft: 3,\n        marginRight: 3,\n        marginTop: 3,\n        marginBottom: 3\n    },\n    dotStyle: {\n        backgroundColor: 'rgba(0,0,0,.2)',\n        width: 8,\n        height: 8,\n        borderRadius: 4,\n        marginLeft: 3,\n        marginRight: 3,\n        marginTop: 3,\n        marginBottom: 3\n    },\n    prevButtonStyle: {\n        color: '#777777'\n    },\n    nextButtonStyle: {\n        color: '#007aff'\n    },\n});\n\nexport default class Swiper extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            width: 0,\n            height: 0,\n            activeIndex: props.index,\n            pan: new Animated.ValueXY(),\n        };\n\n        this._animatedValueX = 0;\n        this._animatedValueY = 0;\n\n        this._panResponder = PanResponder.create({\n            onPanResponderTerminationRequest: () => false,\n            onMoveShouldSetResponderCapture: () => true,\n            onMoveShouldSetPanResponderCapture: (e, gestureState) => {\n                if(!this.props.swipingEnabled)\n                    return false;\n                if(this.props.onAnimationStart)\n                    this.props.onAnimationStart();\n                const allow = Math.abs(this.props.direction === \"row\" ? gestureState.dx : gestureState.dy) > 5;\n                if(allow) this.stopAutoplay();\n                return allow;\n            },\n            onPanResponderGrant: (e, gestureState) => this._fixState(),\n            onPanResponderMove: Animated.event([\n                null, this.props.direction === \"row\" ? {dx: this.state.pan.x} : {dy: this.state.pan.y},\n            ]),\n            onPanResponderRelease: (e, gesture) => {\n                const correction = this.props.direction===\"row\" ? gesture.moveX-gesture.x0 : gesture.moveY-gesture.y0;\n                this.startAutoplay();\n                if(Math.abs(correction) < ((this.props.direction===\"row\" ? this.state.width : this.state.height) * this.props.actionMinWidth))\n                    return Animated.spring(this.state.pan,{toValue:{x:0,y:0}}).start(() => {\n                        if(this.props.onAnimationEnd)\n                            this.props.onAnimationEnd(this.state.activeIndex);\n                    });\n                this._changeIndex(correction>0 ? -1 : 1);\n            }\n        });\n    }\n\n    componentDidMount() {\n        this.state.pan.x.addListener((value) => this._animatedValueX = value.value);\n        this.state.pan.y.addListener((value) => this._animatedValueY = value.value);\n        this.startAutoplay();\n    }\n\n    componentWillUnmount() {\n        this.stopAutoplay();\n        this.state.pan.x.removeAllListeners();\n        this.state.pan.y.removeAllListeners();\n    }\n\n    startAutoplay() {\n        this.stopAutoplay();\n        if(this.props.autoplayTimeout) {\n            this.autoplay = setTimeout(() => {\n                this.moveUpDown(this.props.autoplayTimeout<0)\n            }, Math.abs(this.props.autoplayTimeout)*1000);\n        }\n    }\n\n    stopAutoplay() {\n        this.autoplay && clearTimeout(this.autoplay);\n    }\n\n    moveUpDown(down=false) {\n        this._fixState();\n        if(this.props.onAnimationStart)\n            this.props.onAnimationStart();\n        this._changeIndex(down ? -1 : 1);\n    }\n\n    _fixState() {\n        this._animatedValueX = this.props.direction===\"row\" ? this.state.width*this.state.activeIndex*-1 : 0;\n        this._animatedValueY = this.props.direction===\"row\" ? 0 : this.state.height*this.state.activeIndex*-1;\n        this.state.pan.setOffset({x: this._animatedValueX, y: this._animatedValueY});\n        this.state.pan.setValue({x: 0, y: 0});\n    }\n\n    _changeIndex(delta=1) {\n        let move = {x:0,y:0};\n        let skipChanges = (!delta);\n        let calcDelta = delta;\n        if(this.state.activeIndex<=0 && delta<0) {\n            skipChanges = (!this.props.loop);\n            calcDelta = this.count+delta;\n        } else if(this.state.activeIndex+1>=this.count && delta>0) {\n            skipChanges = (!this.props.loop);\n            calcDelta = -1*this.state.activeIndex+delta-1;\n        }\n        if(skipChanges)\n            return Animated.spring(this.state.pan,{toValue:move}).start(() => {\n                if(this.props.onAnimationEnd)\n                    this.props.onAnimationEnd(this.state.activeIndex);\n            });\n        this.stopAutoplay();\n        let index = this.state.activeIndex+calcDelta;\n        this.setState({activeIndex: index});\n        if(this.props.direction===\"row\")\n            move.x = this.state.width*-1*calcDelta;\n        else\n            move.y = this.state.height*-1*calcDelta;\n        Animated.spring(this.state.pan,{toValue:move}).start(() => {\n            if(this.props.onAnimationEnd)\n                this.props.onAnimationEnd(index);\n        });\n        this.startAutoplay();\n        this.props.onIndexChanged && this.props.onIndexChanged(index);\n    }\n\n    _onLayout(event) {\n        const {width,height} = event.nativeEvent.layout;\n        this.setState({width,height}, () => this._fixState());\n    }\n\n    render() {\n        const {pan,width,height,activeIndex} = this.state;\n        const {\n            direction,\n            containerStyle,\n            swipeAreaStyle,\n            swipeWrapperStyle,\n            controlsWrapperStyle,\n            dotsWrapperStyle,\n            dotElement,\n            dotStyle,\n            activeDotElement,\n            activeDotStyle,\n            prevButtonElement,\n            prevButtonStyle,\n            prevButtonText,\n            nextButtonElement,\n            nextButtonStyle,\n            nextButtonText,\n            loop,\n            buttonsEnabled,\n        } = this.props;\n        if(!width) return (<View style={[styles.container,containerStyle]} onLayout={this._onLayout.bind(this)}/>);\n        const overRangeButtonsOpacity = !loop ? this.props.overRangeButtonsOpacity : this.props.overRangeButtonsOpacity || 1;\n        let {children} = this.props;\n        if(!Array.isArray(children)) children = [children];\n        this.count = children.length;\n        return (\n            <View style={[styles.container,containerStyle]} onLayout={this._onLayout.bind(this)}>\n                <View style={[styles.sliderContainer,swipeAreaStyle]}>\n                    <Animated.View\n                        style={[{\n                            position: \"relative\",\n                            top: 0,\n                            left: 0,\n                        },swipeWrapperStyle,{\n                            flexDirection: direction,\n                            width: direction===\"row\" ? width*this.count : width,\n                            height: direction===\"row\" ? height : height*this.count,\n                        },{transform:[{translateX:pan.x},{translateY:pan.y}]}]}\n                        {...this._panResponder.panHandlers}\n                    >\n                        {children.map((el,i)=>(<View key={i} style={{width,height}}>{el}</View>))}\n                    </Animated.View>\n                    {!buttonsEnabled ? null : (\n                      <View style={[styles.controlsWrapperStyle,{\n                          flexDirection: direction,\n                      }, direction===\"row\" ? {left: 0} : {top: 0}, controlsWrapperStyle]}>\n                          <View style={{opacity:!activeIndex ? overRangeButtonsOpacity : 1}}>\n                              <TouchableOpacity disabled={!activeIndex && !loop} onPress={()=>this.moveUpDown(true)}>\n                                  {prevButtonElement || <Text style={[styles.prevButtonStyle,prevButtonStyle]}>{prevButtonText}</Text>}\n                              </TouchableOpacity>\n                          </View>\n                          <View style={[{flexDirection:direction},styles.dotsWrapperStyle,dotsWrapperStyle]}>\n                              {children.map((el,i)=>(\n                                <View key={i}>\n                                    {i===activeIndex\n                                      ? activeDotElement || <View style={[styles.activeDotStyle,activeDotStyle]} />\n                                      : dotElement || <View style={[styles.dotStyle,dotStyle]} />}\n                                </View>\n                              ))}\n                          </View>\n                          <View style={{opacity:activeIndex+1>=this.count ? overRangeButtonsOpacity : 1}}>\n                              <TouchableOpacity disabled={activeIndex+1>=this.count && !loop} onPress={()=>this.moveUpDown()}>\n                                  {nextButtonElement || <Text style={[styles.nextButtonStyle,nextButtonStyle]}>{nextButtonText}</Text>}\n                              </TouchableOpacity>\n                          </View>\n                      </View>\n                    )}\n                </View>\n            </View>\n        );\n    }\n}\n\nSwiper.propTypes = {\n    direction: PropTypes.oneOf([\"row\",\"column\"]),\n    index: PropTypes.number,\n    onIndexChanged: PropTypes.func,\n    onAnimationStart: PropTypes.func,\n    onAnimationEnd: PropTypes.func,\n    actionMinWidth: PropTypes.number,\n    children: PropTypes.node.isRequired,\n    overRangeButtonsOpacity: PropTypes.number,\n    loop: PropTypes.bool,\n    autoplayTimeout: PropTypes.number,\n    swipingEnabled: PropTypes.bool,\n    buttonsEnabled: PropTypes.bool,\n    containerStyle: ViewPropTypes.style,\n    swipeAreaStyle: ViewPropTypes.style,\n    swipeWrapperStyle: ViewPropTypes.style,\n    controlsWrapperStyle: ViewPropTypes.style,\n    dotsWrapperStyle: ViewPropTypes.style,\n    dotStyle: ViewPropTypes.style,\n    dotElement: PropTypes.element,\n    activeDotStyle: ViewPropTypes.style,\n    activeDotElement: PropTypes.element,\n    prevButtonStyle: Text.propTypes.style,\n    prevButtonElement: PropTypes.element,\n    prevButtonText: PropTypes.string,\n    nextButtonStyle: Text.propTypes.style,\n    nextButtonElement: PropTypes.element,\n    nextButtonText: PropTypes.string,\n};\n\nSwiper.defaultProps = {\n    direction: \"row\",\n    index: 0,\n    actionMinWidth: 0.25,\n    overRangeButtonsOpacity: 0,\n    loop: false,\n    autoplayTimeout: 0,\n    swipingEnabled: true,\n    buttonsEnabled: true,\n    prevButtonText: \"prev\",\n    nextButtonText: \"next\",\n};","import React, { useState, useEffect, useContext } from \"react\";\nimport { Context } from \"../context\";\nimport {TextInput,View,TouchableOpacity,Dimensions,Text} from \"react-native\"\n\nconst AddPost = () => {\nconst [state, setState] = useContext(Context);\nconst[userInput,setUserInput,Refs] = useState(\"\")\n//const [userInput, setUserInput] = useState(\"\");\n//const [trackTitle, setTrackTitle] = useState(\"\");\n//const [posts] =useState(\"\")\n\n// useEffect(() => {\n// //     axios\n// //       .get(\n// //         `https://cors-anywhere.herokuapp.com/http://api.musixmatch.com/ws/1.1/track.search?q_track=${trackTitle}&page_size=10&page=1&s_track_rating=desc&apikey=${\n// //           process.env.REACT_APP_MM_KEY\n// //         }`\n// //       )\n// //       .then(res => {\n// //         let track_list = res.data.message.body.track_list;\n// //         setState({ track_list: track_list, heading: \"Search Results\" });\n// //       })\n// //       .catch(err => console.log(err));\n// //   }, [trackTitle]\n// // this.refs.addPost.value=\"\"\n//     },[state.posts]\n// );\n   \n    // window.addEventListener(\"resize\", updateDimensions);\n    // window.addEventListener(\"orientationchange\",updateDimensions);\n    const addTodo = (e) => {\n    //e.preventDefault();\n    //setTrackTitle(userInput);\n    if(state.text==\"\"){\n        //console.log('stop')\n    }\n    else{\n        alert(state.text)\n        setState({...state,posts:[...state.posts,state.text],text:\"\"})\n    }\n    //console.log(state)\n    //console.log(Refs)\n    //document.getElementById('addPost').value=''\n    \n  };\n\n\n  const onChange = (e) => {\n    //e.preventDefault()\n    //setUserInput(e.target.value)\n    //console.log()\n    \n    setState({...state,userInput:e.target.value})\n    //console.log(e.nativeEvent.inputType)\n    \n        if(e.nativeEvent.inputType=='insertLineBreak'){\n            addTodo()\n            //console.log('we should be here')\n            //setState({...state,posts:[...state.posts,state.text],text:\"\"})\n        }\n        else if(e.nativeEvent.inputType=='insertText'){\n            \n            setState({...state,text:e.target.value})\n        }\n    \n\n    \n  };\n\n  return (\n    // eslint-disable-next-line no-use-before-define\n    <View style={{\n      marginTop:1,\n      borderColor:'transparent',\n      borderWidth:1,\n      flexDirection:'row',\n      flex:1,\n      // width:Dimensions.get('window').width,\n    }}>\n      {/* <form onSubmit={addTodo}  style={{\n              margin:1,\n              borderColor:'#cfcfcf',\n              borderWidth:1,\n              alignItems:'center',\n              flexDirection:'column',\n              flex:1,\n              \n              // shadowColor: 'rgba(1, 1, 1, 1)',\n              // shadowOffset: {width: 0, height: 0},\n              // shadowRadius: 1,\n              color:'black',\n              // textShadowColor: 'rgba(1, 1, 1, 1)',\n              // textShadowOffset: {width: 0, height: 0},\n              // textShadowRadius: 5\n            }}> */}\n        \n          {/* <input\n            id=\"addPost\"\n            type=\"text\"\n            className=\"form-control form-control-lg\"\n            placeholder=\"type todo...\"\n            name=\"userInput\"\n            value={state.text}\n            onChange={onChange}\n          /> */}\n        <TextInput \n            className='inputText'\n            editable = {true}\n            autoCorrect={false}\n            blurOnSubmit={false}\n            maxLength = {40}\n            multiline = {false}\n            numberOfLines = {1}\n            caretHidden={true}\n            //onChangeText={(text) => setState({...state,text:text})}\n            onChangeText={(text)=>{ \n              setState({...state,text:text})\n              //console.log(text)\n            }}\n            keyboardType={'default'}\n            value={state.text}\n            onChange={onChange}\n            onSubmitEditing={addTodo}\n            //onClick={console.log('clicked')}\n            returnKeyType='search'\n            clearButtonMode=\"while-editing\"\n            autoFocus\n            //onFocus={()=>{console.log('on focus')}}\n            theme={{ colors: { placeholder: 'white', text: 'white', primary: 'white', \n  underlineColor: 'transparent', background: '#003489' } }}\n            style={{\n              marginLeft:1,\n              paddingLeft:3,\n              borderColor:'#cfcfcf',\n              borderWidth:1,\n              alignItems:'center',\n              flexDirection:'row',\n              flex:1,\n\n              //outline:'none',\n              width:Dimensions.get('window').width-26,\n              // shadowColor: 'rgba(1, 1, 1, 1)',\n              // shadowOffset: {width: 0, height: 0},\n              // shadowRadius: 1,\n              color:'black',\n              // paddingBottom:2,\n              height:22,\n              // textShadowColor: 'rgba(1, 1, 1, 1)',\n              // textShadowOffset: {width: 0, height: 0},\n              // textShadowRadius: 5\n              \n            }}\n          />\n        \n        {/* <button className=\"button\" type=\"submit\">\n          add\n        </button> */}\n        <TouchableOpacity \n           \n            type=\"submit\" \n            style={{\n                height:22,\n                width:22,\n                backgroundColor:'#ffffff',\n                \n                alignItems:'center',\n                justifyContent:'center',\n                marginLeft:2,\n                marginRight:1,\n                borderColor:'#cfcfcf',\n                borderWidth:1,\n                paddingLeft:2,\n                paddingRight:2,\n                //flex:1,\n                //shadowColor: 'rgba(1, 1, 1, 1)',\n                //shadowOffset: {width: 0, height: 0},\n                //shadowRadius: 20\n                }}\n            onPress={addTodo}>\n          <Text style={{\n              color:'black',\n              fontSize:12,\n              paddingBottom:2,\n              //textShadowColor: 'rgba(1, 1, 1, 1)',\n              //textShadowOffset: {width: 0, height: 0},\n              //textShadowRadius: 20,\n            }}>\n                +\n            </Text>\n        </TouchableOpacity>\n      {/* </form> */}\n    </View>\n  );\n};\n\nexport default AddPost;","//import React, {memo} from 'react'\nimport React,{Component,useContext,useState,useEffect,memo} from 'react';\nimport {Animated,PanResponder,Text,View,KeyboardAvoidingView,ScrollView,Dimensions} from 'react-native'\nimport HorizontalSwipeElements from './HorizontalSwipeElements'\nimport SwipeableList from './SwipeableList'\nimport SwipeableScroller from './SwipeableScroller'\nimport Swiper from './Swiper'\nimport AddPost from './AddPost'\nconst Home = () => (\n  <div style={{\n    flex:1,\n    margin:1,\n    borderColor:'#000000',\n    borderWidth:5,\n    // shadowColor: 'rgba(1, 1, 1, 1)',\n    // shadowOffset: {width: 0, height: 0},\n    // shadowRadius: 20,\n    //backgroundColor:'#ffffff',\n    alignItems:'center',\n    justifyContent:'space-evenly',\n    height:22,\n  }}>\n  {/* <p style={{          \n  \n      height:22,\n \n      flexDirection:'row',\n      flex:1,\n      fontSize:12,\n \n      color:'black',\n      // textShadowColor: 'black',\n      // textShadowOffset: {width: 0, height: 0},\n      // textShadowRadius: 20\n    }}>\n    Home\n  </p> */}\n     <View>         \n      <SwipeableScroller>\n        <View style={{backgroundColor:'transparent',flex:1,flexDirection:'column',margin:5,paddingRight:2,paddingLeft:2}}>\n\n          <View  style={{height:Dimensions.get('window').height/6,backgroundColor:'transparent'}}>\n\n            <Swiper buttonsEnabled={false} loop={true} autoplayTimeout={5}>\n  \n              <View style={{\n                flex: 1,\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                backgroundColor: \"rgb(20,20,20)\"\n                }}>\n                  <Text>Slide 1</Text>\n              </View>\n              <View style={{\n                flex: 1,\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                backgroundColor: \"rgb(110,110,110)\"\n              }}>\n                  <Text>Slide 2</Text>\n              </View>\n              <View style={{\n                flex: 1,\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                backgroundColor: \"rgb(200,200,200)\"\n              }}>\n                  <Text>Slide 3</Text>\n              </View>\n            </Swiper>\n          </View>\n\n          </View>\n          <View>\n          <SwipeableList/>\n          </View>\n        </SwipeableScroller>\n        <KeyboardAvoidingView style={{height:Dimensions.get('window').height/15+50,backgroundColor:'transparent',flexDirection:'column',margin:5}} behavior=\"padding\" enabled>\n          <View style={{backgroundColor:'transparent',height:30,felxDirection:'column',alignItems:'center',justifyContent:'center'}}>\n            <AddPost style={{marginTop:15,marginRight:10,marginLeft:10}}/>\n          </View>\n\n          <ScrollView horizontal = {true} style={{height:Dimensions.get('window').height/15,backgroundColor:'transparent',flexDirection:'row',marginLeft:15,marginRight:15}}>\n            <View style={{height:Dimensions.get('window').height/15,width:(Dimensions.get('window').height)/12,backgroundColor:'white',flex:1,flexDirection:'column',marginRight:2,marginLeft:3}}>\n              <Text selectable={false}>one</Text>\n            </View>\n            <View style={{height:Dimensions.get('window').height/15,width:(Dimensions.get('window').height)/12,backgroundColor:'lightgrey',flex:1,flexDirection:'column',marginRight:2,marginLeft:2}}>\n              <Text selectable={false}>two</Text>\n            </View>\n            <View style={{height:Dimensions.get('window').height/15,width:(Dimensions.get('window').height)/12,backgroundColor:'darkgrey',flex:1,flexDirection:'column',marginRight:2,marginLeft:2}}>\n              <Text selectable={false}>three</Text>\n            </View>\n            <View style={{height:Dimensions.get('window').height/15,width:(Dimensions.get('window').height)/12,backgroundColor:'black',flex:1,flexDirection:'column',marginRight:2,marginLeft:2}}>\n              <Text selectable={false}>four</Text>\n            </View>\n            <View style={{height:Dimensions.get('window').height/15,width:(Dimensions.get('window').height)/12,backgroundColor:'white', flex:1,flexDirection:'column',marginRight:2,marginLeft:2}}>\n              <Text selectable={false}>one</Text>\n            </View>\n            <View style={{height:Dimensions.get('window').height/15,width:(Dimensions.get('window').height)/12,backgroundColor:'lightgrey',flex:1,flexDirection:'column',marginRight:2,marginLeft:2}}>\n              <Text selectable={false}>two</Text>\n            </View>\n            <View style={{height:Dimensions.get('window').height/15,width:(Dimensions.get('window').height)/12,backgroundColor:'darkgrey',flex:1,flexDirection:'column',marginRight:2,marginLeft:2}}>\n              <Text selectable={false}>three</Text>\n            </View>\n            <View style={{height:Dimensions.get('window').height/15,width:(Dimensions.get('window').height)/12,backgroundColor:'black',flex:1,flexDirection:'column',marginRight:2,marginLeft:2}}>\n              <Text selectable={false}>four</Text>\n            </View>\n          </ScrollView>\n        \n        </KeyboardAvoidingView>\n      </View> \n  </div>\n)\n\nexport default Home\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchPosts } from '../actions/postActions';\nimport {View,Text,StyleSheet} from 'react-native';\n\n\n  \n  const mapStateToProps = state => ({\n    posts: state.posts.items,\n    newPost: state.posts.item\n  });\n\nclass Posts extends Component {\n  componentWillMount() {\n    //this.props.fetchPosts();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.newPost) {\n      this.props.posts.unshift(nextProps.newPost);\n    }\n  }\n\n  render() {\n    \n    const postItems = this.props.posts.map((post, i)=>\n      <View key={i} style={{\n\n      }}>\n        <Text style={{\n          color:'black',\n          // textShadowColor: 'rgba(1, 1, 1, 1)',\n          // textShadowOffset: {width: 0, height: 0},\n          // textShadowRadius: 20\n          }}>{post}</Text>\n      </View>\n    );\n  \n    return (\n      <View style={{\n        margin:1,\n        borderColor:'#cfcfcf',\n        borderWidth:1,\n        // shadowColor: 'rgba(1, 1, 1, 1)',\n        // shadowOffset: {width: 0, height: 0},\n        // shadowRadius: 20,\n        }}>\n        {postItems}\n      </View>\n    );\n    \n  }\n}\n\nPosts.propTypes = {\n  fetchPosts: PropTypes.func.isRequired,\n  posts: PropTypes.array.isRequired,\n  newPost: PropTypes.object\n};\n\nexport default connect(mapStateToProps, { fetchPosts })(Posts);","import {Dimensions} from 'react-native'\nexport const fetchPosts = () => dispatch => {\n  fetch('https://jsonplaceholder.typicode.com/posts')\n    .then(res => res.json())\n    .then(posts =>\n      dispatch({\n        type: 'FETCH_POSTS',\n        payload: posts\n      })\n    );\n};\nexport const setTitleOnload = (title) => {\n  \n   return({\n     type: 'SET_TITLE',\n     payload: title\n   })\n  }\n\nexport const getYscrolled=(e)=>{\n    var payload=String(e.target)\n    return({\n      type:'GET_Y_SCROLLED',\n      payload:payload\n    })\n}\n\nexport const updateDimensions =(event) =>{\n  //var width= Math.floor(Dimensions.get('window').width)\n        //console.log('width received is'+event.target.innerWidth)\n        return({\n          type:'SET_WIDTH',\n          payload:event.target.innerWidth\n        })\n}\nexport const createPost = (postData) => dispatch => {\n  fetch('https://jsonplaceholder.typicode.com/posts', {\n    method: 'POST',\n    headers: {\n      'content-type': 'application/json'\n    },\n    body: JSON.stringify(postData)\n  })\n    .then(res => res.json())\n    .then(post =>\n      dispatch({\n        type: 'NEW_POST',\n        payload: post\n      })\n    );\n};\nexport const addPost = (text) => dispatch => {\n  //console.log(text)\n    dispatch({\n      type: 'ADD_POST',\n      payload: text\n    }) \n};\nexport const setTitle = (title) => dispatch => {\n  //console.log(title)\n  dispatch({\n    type: 'SET_TITLE',\n    payload: title\n  })\n\n};","import React, {Button, Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom'\nclass CatalogueScreen extends Component {\n    constructor(props) {\n        super(props);\n\n    }\n\n    componentWillMount() {\n\n    }\n\n    componentDidMount() {\n\n    }\n\n    componentWillReceiveProps(nextProps) {\n\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n\n    }\n\n    componentWillUpdate(nextProps, nextState) {\n\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n\n    }\n\n    componentWillUnmount() {\n\n    }\n\n    render() {\n        return (\n            <div>\n                <div>\n                    catalogue\n                </div>\n                <Link id=\"linkCategory\" to=\"/Category\">Category</Link><br/>\n                <Link id=\"linkProduct\" to=\"/Product\">Product</Link><br/>\n                \n            </div>\n            \n        );\n    }\n}\n\nCatalogueScreen.propTypes = {\n\n};\n\nexport default CatalogueScreen;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom'\nclass CategoryScreen extends Component {\n    constructor(props) {\n        super(props);\n\n    }\n\n    componentWillMount() {\n\n    }\n\n    componentDidMount() {\n\n    }\n\n    componentWillReceiveProps(nextProps) {\n\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n\n    }\n\n    componentWillUpdate(nextProps, nextState) {\n\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n\n    }\n\n    componentWillUnmount() {\n\n    }\n\n    render() {\n        return (\n            <div>\n                <div>\n                    category\n                </div>\n                <Link id=\"Product\" to=\"/Product\">Product</Link><br/>\n                <Link id=\"Catalouge\" to=\"/Catalogue\">Catalogue</Link><br/>\n            </div>\n        );\n    }\n}\n\nCategoryScreen.propTypes = {\n\n};\n\nexport default CategoryScreen;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom'\nclass ProductScreen extends Component {\n    render() {\n        return (\n            <div>\n                <div>product</div>\n                <Link id=\"Catalouge\" to=\"/Catalogue\">Catalogue</Link><br/>\n                <Link id=\"Category\" to=\"/Category\">Category</Link><br/>\n            </div>\n        );\n    }\n}\n\nexport default ProductScreen;","import React,{memo} from 'react';\n//import { createStackNavigator, createAppContainer } from '@react-navigation/native';\n// import { CatalogueScreen, \n//          CategoryScreen, \n//          ProductScreen,  \n//          SearchScreen,\n//          SearchResultsScreen,\n//          BagScreen } from './screens';\nimport {createSwitchNavigator,createBottomTabNavigator} from \"@react-navigation/core\"\nimport {createBrowserApp} from \"@react-navigation/web\"\nimport CatalogueScreen from './screens/CatalogueScreen'\nimport CategoryScreen from './screens/CategoryScreen'\nimport ProductScreen from './screens/ProductScreen'\nimport SearchScreen from './screens/SearchScreen'\nimport SearchResultsScreen from './screens/SearchResultsScreen'\nimport BagScreen from './screens/BagScreen'\n//import Ionicons from 'react-native-vector-icons/Ionicons';\n\n\n\n\nconst Nav = createSwitchNavigator({\n   catalogue: CatalogueScreen,\n    category: CategoryScreen,\n     product: ProductScreen\n}, {\n    //configuration options...\n    defaultNAvigationOptions:{\n        headerStyle:{\n            backgroundColor:'orange'\n        }\n    }\n});\nconst Navigator = createBrowserApp(Nav)\n// const Navigator = createDrawerNavigator({\n//     SearchHome: SearchScreen,\n//  SearchResults: SearchResultsScreen\n// }, {\n//   //configuration options...\n// });\n \n//export default createBrowserApp(Navigator)\n\nexport default memo(Navigator)\n\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass SearchScreen extends Component {\n    constructor(props) {\n        super(props);\n\n    }\n\n    componentWillMount() {\n\n    }\n\n    componentDidMount() {\n\n    }\n\n    componentWillReceiveProps(nextProps) {\n\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n\n    }\n\n    componentWillUpdate(nextProps, nextState) {\n\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n\n    }\n\n    componentWillUnmount() {\n\n    }\n\n    render() {\n        return (\n            <div>\n                Search\n            </div>\n        );\n    }\n}\n\nSearchScreen.propTypes = {\n\n};\n\nexport default SearchScreen;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass SearchResultsScreen extends Component {\n    constructor(props) {\n        super(props);\n\n    }\n\n    componentWillMount() {\n\n    }\n\n    componentDidMount() {\n\n    }\n\n    componentWillReceiveProps(nextProps) {\n\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n\n    }\n\n    componentWillUpdate(nextProps, nextState) {\n\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n\n    }\n\n    componentWillUnmount() {\n\n    }\n\n    render() {\n        return (\n            <div>\n                searchResult\n            </div>\n        );\n    }\n}\n\nSearchResultsScreen.propTypes = {\n\n};\n\nexport default SearchResultsScreen;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass BagScreen extends Component {\n    constructor(props) {\n        super(props);\n\n    }\n\n    componentWillMount() {\n\n    }\n\n    componentDidMount() {\n\n    }\n\n    componentWillReceiveProps(nextProps) {\n\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n\n    }\n\n    componentWillUpdate(nextProps, nextState) {\n\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n\n    }\n\n    componentWillUnmount() {\n\n    }\n\n    render() {\n        return (\n            <div>\n                bagscreen\n            </div>\n        );\n    }\n}\n\nBagScreen.propTypes = {\n\n};\n\nexport default BagScreen;","import React from 'react'\n//import { Link } from 'react-router-dom'\nimport { BrowserRouter,HashRouter, Route, Link,Router,Switch } from \"react-router-dom\";\nimport {ScrollView} from 'react-native'\nimport Navigator from './Navigator'\nimport Catalogue from './screens/CatalogueScreen'\nimport Category from './screens/CategoryScreen'\nimport Product from './screens/ProductScreen'\nimport {SafeAreaView,KeyboardAvoidingView,View,StyleSheet} from 'react-native'\nconst NavBar = () => (\n  // <SafeAreaView>\n  //     <KeyboardAvoidingView             \n  //     style={{\n  //       height:22,\n  //       //backgroundColor:'#666666',\n  //       alignItems:'center',\n  //       justifyContent:'space-evenly',\n  //       flexDirection:'row',\n  //       flex:1,\n  //       fontSize:12,\n  //       margin:1,\n  //       borderColor:'#cfcfcf',\n  //       borderWidth:0,\n  //       // shadowColor: 'rgba(1, 1, 1, 1)',\n  //       // shadowOffset: {width: 0, height: 0},\n  //       // shadowRadius: 20,\n  //       backgroundColor:'#ffffff'\n  //     }}\n  //   >\n      <View style={{\n              height:22,\n              //backgroundColor:'#666666',\n              alignItems:'center',\n              justifyContent:'space-evenly',\n              flexDirection:'row',\n              flex:1,\n              fontSize:12,\n              margin:1,\n              borderColor:'#cfcfcf',\n              borderWidth:0,\n              // shadowColor: 'rgba(1, 1, 1, 1)',\n              // shadowOffset: {width: 0, height: 0},\n              // shadowRadius: 20,\n              backgroundColor:'#ffffff'\n            }}>\n        <View style={styles.box}>\n          <Link id=\"linkHome\" to=\"/\" style={{color:'black', textDecorationLine:'none',borderColor:'black',borderWidth:2}}>Home</Link><br/>\n        </View>\n        <View style={styles.box} >\n          <a id=\"linkLogin\" href=\"/login\" style={{color:'black', textDecorationLine:'none',borderColor:'black',borderWidth:2 }}>Login</a><br/>\n        </View>\n        \n        {/* <View style={styles.box}>\n          <Link id=\"linkTodo\" to=\"/todo\" style={{color:'black', textDecorationLine:'none',borderColor:'black',borderWidth:2}}>Todo</Link><br/>\n        </View> */}\n        {/* <View style={styles.box}>\n          <Link id=\"linkMap\" to=\"/map\" style={{color:'black', textDecorationLine:'none',borderColor:'black',borderWidth:2}}>Map</Link><br/>\n        </View>\n       */}\n          \n      \n      </View>\n  //   </KeyboardAvoidingView>\n  // </SafeAreaView>\n)\nconst styles = StyleSheet.create({\n  \n    box:{\n      margin:0,\n      //padding:1,\n      height:22,\n      backgroundColor:'#ffffff',\n      alignItems:'center',\n      justifyContent:'center',\n      flexDirection:'row',\n      flex:1,\n      fontSize:12,\n      borderColor:'black',\n      borderRadius:2,\n      color:'black',\n      fontSize:12,\n      // textShadowColor: 'rgba(1, 1, 1, 1)',\n      // textShadowOffset: {width: 0, height: 0},\n      // textShadowRadius: 20,\n      borderColor:'#cfcfcf',\n      borderWidth:1,\n    },\n    link:{\n      color:'black', \n      textDecorationLine:'none',\n      borderColor:'black',\n      borderWidth:1 \n    }\n        \n})\nexport default NavBar\n","import React, { Component,Context } from 'react';\n\nconst Post=(props)=>{\n    return (\n        <div key={props.id}>\n            <p >{props.material}</p>\n        </div>\n    )\n}\n\nclass Posts extends Component{\n\n    render(){\n        return(\n            this.props.posts.map((post, i)=>\n                <div>\n                    <Post id={i} meterial={post}/>\n                </div>\n            )\n        )\n    }\n} \n    \n\n\n    \n\n    \n\n\nexport default () => {\n  return (\n    <div>     \n      <Posts/>\n      {/* <Form /> */}\n    </div>\n  );\n};\n","import React,{memo }from 'react'\nimport {Text,View} from 'react-native'\nconst NoMatch = () => (\n  <View style={{\n    margin:1,\n    borderColor:'#cfcfcf',\n    borderWidth:1,\n    // shadowColor: 'rgba(1, 1, 1, 1)',\n    // shadowOffset: {width: 0, height: 0},\n    // shadowRadius: 20,\n    backgroundColor:'#ffffff',\n    alignItems:'center',\n    justifyContent:'space-evenly',\n    height:22\n  }}>\n  <Text style={{          \n  \n      height:50,\n \n      flexDirection:'row',\n      flex:1,\n      fontSize:12,\n \n      color:'black',\n      // textShadowColor: 'black',\n      // textShadowOffset: {width: 0, height: 0},\n      // textShadowRadius: 20\n    }}>\n    No Match\n  </Text>\n  </View>\n)\n\nexport default memo(NoMatch)\n","import React, { Component,memo } from 'react';\nimport { BrowserRouter,HashRouter, Route, Link,Router,Switch } from \"react-router-dom\";\nimport NavBar from './NavBar'\nimport Todo from './Todo'\nimport Home from './Home'\nimport NoMatch from './NoMatch'\n// import Map from './Map'\n// import Catalogue from './screens/CatalogueScreen'\n// import Category from './screens/CategoryScreen'\n// import Product from './screens/ProductScreen'\n// class RouterElement extends Component {\n//     render() {\n//         return (\n//             <BrowserRouter>\n//                 <Switch>\n//                     <Route exact path=\"/\" component={Home} />\n//                     <Route exact path=\"/todo\" render={()=><Todo itemsChanged={handleItems} items={state.items}/>}>\n//                     </Route>\n//                     <Route exact path=\"/map\" component={Map}/>\n//                     <Route component={NoMatch} />\n//                 </Switch>\n//                 <NavBar />\n//             </BrowserRouter>\n//         );\n//     }\n// }\nclass RouterElement extends Component {\n    render() {\n        return (\n            <BrowserRouter>\n                <Switch>\n                    <Route exact path=\"/\" component={Home} />\n                    <Route exact path=\"/todo\" component={Todo}/>\n                    <Route exact path=\"/map\" component={Map}/>\n                    {/* <Route exact path=\"/Catalogue\" component={Catalogue} />\n                    <Route exact path=\"/Category\" component={Category}/>\n                    <Route exact path=\"/Product\" component={Product}/> */}\n                    <Route component={NoMatch} />\n                </Switch>\n                <NavBar />\n            </BrowserRouter>\n        );\n    }\n}\nexport default memo(RouterElement);","//import React,{Component,Context,useContext,useState,useEffect} from 'react';\nimport React,{Component,useContext,useState,useEffect} from 'react';\nimport {Animated,PanResponder} from 'react-native'\n//import logo from './logo.svg';\n//import './App.css';\nimport Header from './components/Header'\nimport Home from './components/Home'\nimport Posts from './components/Posts'\nimport AddPost from './components/AddPost'\nimport Swiper from './components/Swiper'\nimport NavBar from './components/NavBar'\nimport ScrollableHeader from './components/ScrollableHeader'\nimport HorizontalSwipeElements from './components/HorizontalSwipeElements'\nimport SwipeableList from './components/SwipeableList'\nimport SwipeableScroller from './components/SwipeableScroller'\nimport RouterElement from './components/RouterElement'\n// testimport NavigationV3 from './components/Navigationv3'\n//import {FlatList} from 'react'\nimport {ContextController,Context} from './context'\n//import { Context } from \"./context\";\nimport {View,Text,ScrollView,Dimensions,Platform,SafeAreaView,StyleSheet,KeyboardAvoidingView} from 'react-native'\nconst instructions = Platform.select({\n  ios: 'Press Cmd+R to reload,\\n' + 'Cmd+D or shake for dev menu',\n  android: 'Double tap R on your keyboard to reload,\\n' + 'Shake or press menu button for dev menu',\n});\nconst translateY = new Animated.Value(0);\n\nvar star=0\nconst _panResponder = PanResponder.create({\n  onMoveShouldSetResponderCapture: () => true,\n  onMoveShouldSetPanResponderCapture: () => true,\n  onPanResponderMove: (e,gestureState)=>{\n    translateY.setValue(gestureState.dy) \n    console.log(star+translateY._value)  \n  } ,\n\n  onPanResponderRelease: (e, {vy, dy}) => {\n    star+=dy\n    console.log(star)\n  }\n});\n// class App extends Component {\n\nconst App = (props)=>{\n  //const [state, setState] = useContext(Context);\n  // const makeRemoteRequest = () => {\n  //     if(state.data!=[]){\n  //       const { page, seed } = state;\n  //       const url = `https://randomuser.me/api/?seed=${seed}&page=${page}&results=20`;\n  //       setState({ loading: true });\n\n  //       fetch(url)\n  //         .then(res => res.json())\n  //         .then(res => {\n  //           //console.log(res.results)\n  //           var copy =[...res.results]\n  //           var indexed =[]\n  //           for (var i =0; i<copy.length;i++){\n  //             indexed[i]={...copy[i],index:i}\n  //           }\n          \n  //           setState({\n  //             //data: page === 1 ? res.results : [...state.data, ...res.results],\n  //             data:[...state.data,...indexed],\n  //             error: res.error || null,\n  //             loading: false,\n  //             refreshing: false\n  //           });\n  //         })\n  //         .catch(error => {\n  //           setState({ error, loading: false });\n  //         });\n  //       console.log('some how this ran')\n  //     }   \n  //   };\n  useEffect(()=>{\n    // console.log('somehow this ran in the App useEffect method!!')\n  })\n  \n  // componentDidMount() {\n  //  // window.scrollTo(0, 0)\n    \n  // }\n  // click(string){\n  //   alert(string)\n  // }\n  // render(){\n    const logger=(e)=>{\n      //console.log(e.nativeEvent.contentOffset.y)\n      \n    }\n    return(\n     \n      <ContextController>\n      \n        <SafeAreaView>\n          \n         <View style={{backgroundColor:'transparent',flexDirection:'column',margin:0,padding:0}}>\n            \n            <RouterElement/>\n           \n          </View>\n        </SafeAreaView>\n      \n      </ContextController>\n    )\n  // }\n}\n\nconst appStyle = {\n  flex:1,\n  margin:0,\n  borderColor:'#000000',\n  //borderWidth:5,\n  // shadowColor: 'rgba(1, 1, 1, 1)',\n  // shadowOffset: {width: 0, height: 0},\n  // shadowRadius: 20,\n  backgroundColor:'#ffffff',\n  alignItems:'center',\n  justifyContent:'space-evenly',\n  height:22,\n};\nexport default App;\n\n\n\n\n// import React, { Component } from \"react\";\n// import {\n//   AppRegistry,\n//   StyleSheet,\n//   Text,\n//   View,\n//   FlatList,\n//   AsyncStorage,\n//   Button,\n//   TextInput,\n//   Keyboard,\n//   Platform\n// } from \"react-native\";\n\n// const isAndroid = Platform.OS == \"android\";\n// const viewPadding = 10;\n\n// export default class TodoList extends Component {\n//   state = {\n//     tasks: [],\n//     text: \"\"\n//   };\n\n//   changeTextHandler = text => {\n//     setState({ text: text });\n//   };\n\n//   addTask = () => {\n//     let notEmpty = state.text.trim().length > 0;\n\n//     if (notEmpty) {\n//       this.setState(\n//         prevState => {\n//           let { tasks, text } = prevState;\n//           return {\n//             tasks: tasks.concat({ key: tasks.length, text: text }),\n//             text: \"\"\n//           };\n//         },\n//         () => Tasks.save(state.tasks)\n//       );\n//     }\n//   };\n\n//   deleteTask = i => {\n//     this.setState(\n//       prevState => {\n//         let tasks = prevState.tasks.slice();\n\n//         tasks.splice(i, 1);\n\n//         return { tasks: tasks };\n//       },\n//       () => Tasks.save(state.tasks)\n//     );\n//   };\n\n//   componentDidMount() {\n//     Keyboard.addListener(\n//       isAndroid ? \"keyboardDidShow\" : \"keyboardWillShow\",\n//       e => this.setState({ viewPadding: e.endCoordinates.height + viewPadding })\n//     );\n\n//     Keyboard.addListener(\n//       isAndroid ? \"keyboardDidHide\" : \"keyboardWillHide\",\n//       () => this.setState({ viewPadding: viewPadding })\n//     );\n\n//     Tasks.all(tasks => this.setState({ tasks: tasks || [] }));\n//   }\n\n//   render() {\n//     return (\n//       <View\n//         style={[styles.container, { paddingBottom: state.viewPadding }]}\n//       >\n//         <FlatList\n//           style={styles.list}\n//           data={this.state.tasks}\n//           renderItem={({ item, index }) =>\n//             <View>\n//               <View style={styles.listItemCont}>\n//                 <Text style={styles.listItem}>\n//                   {item.text}\n//                 </Text>\n//                 <Button title=\"X\" onPress={() => this.deleteTask(index)} />\n//               </View>\n//               <View style={styles.hr} />\n//             </View>}\n//         />\n//         <TextInput\n//           style={styles.textInput}\n//           onChangeText={this.changeTextHandler}\n//           onSubmitEditing={this.addTask}\n//           value={this.state.text}\n//           placeholder=\"Add Tasks\"\n//           returnKeyType=\"done\"\n//           returnKeyLabel=\"done\"\n//         />\n//       </View>\n//     );\n//   }\n// }\n\n// let Tasks = {\n//   convertToArrayOfObject(tasks, callback) {\n//     return callback(\n//       tasks ? tasks.split(\"||\").map((task, i) => ({ key: i, text: task })) : []\n//     );\n//   },\n//   convertToStringWithSeparators(tasks) {\n//     return tasks.map(task => task.text).join(\"||\");\n//   },\n//   all(callback) {\n//     return AsyncStorage.getItem(\"TASKS\", (err, tasks) =>\n//       this.convertToArrayOfObject(tasks, callback)\n//     );\n//   },\n//   save(tasks) {\n//     AsyncStorage.setItem(\"TASKS\", this.convertToStringWithSeparators(tasks));\n//   }\n// };\n\n// const styles = StyleSheet.create({\n//   container: {\n//     flex: 1,\n//     justifyContent: \"center\",\n//     alignItems: \"center\",\n//     backgroundColor: \"#F5FCFF\",\n//     padding: viewPadding,\n//     paddingTop: 20\n//   },\n//   list: {\n//     width: \"100%\"\n//   },\n//   listItem: {\n//     paddingTop: 2,\n//     paddingBottom: 2,\n//     fontSize: 18\n//   },\n//   hr: {\n//     height: 1,\n//     backgroundColor: \"gray\"\n//   },\n//   listItemCont: {\n//     flexDirection: \"row\",\n//     alignItems: \"center\",\n//     justifyContent: \"space-between\"\n//   },\n//   textInput: {\n//     height: 40,\n//     paddingRight: 10,\n//     paddingLeft: 10,\n//     borderColor: \"gray\",\n//     borderWidth: isAndroid ? 0 : 1,\n//     width: \"100%\"\n//   }\n// });","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
{"version":3,"sources":["components/Form.js","components/List.js","components/Header.js","components/Todo.js","components/Home.js","components/NoMatch.js","components/NavBar.js","components/Map.js","serviceWorker.js","index.js","App.js"],"names":["Form","props","_useState","useState","_useState2","Object","slicedToArray","value","setValue","react_default","a","createElement","type","placeholder","onChange","e","target","onClick","preventDefault","onAdd","ListItem","checked","setChecked","useEffect","timeoutHandle","setTimeout","onDelete","clearTimeout","style","textDecoration","className","text","List","items","map","item","key","id","bind","Header","StyleSheet","create","headerContainer","backgroundColor","width","height","header","padding","paddingVertical","alignItems","flexDirection","minHeight","headerCenter","flex","order","headerLeft","headerRight","title","fontSize","fontWeight","textAlign","color","_ref","onBack","Text","accessibilityRole","i","Todo","console","log","setItems","itemsChanged","concat","toConsumableArray","index","findIndex","splice","Home","NoMatch","NavBar","react_router_dom","to","href","MAPBOX_ACCESS_TOKEN","fetch","then","resulst","json","catch","err","initialViewState","longitude","latitude","zoom","pitch","bearing","data","sourcePosition","targetPosition","Map","layers","LineLayer","deckgl","viewState","controller","esm","mapboxApiAccessToken","Boolean","window","location","hostname","match","ReactDOM","render","state","setState","handleItems","components_Header","react_router","exact","path","component","components_NavBar","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f1cd24fd.chunk.js","sourcesContent":["import React, {useState} from 'react'\nexport default function Form(props){\n    const [value, setValue]=useState('');\n\n    function handleAdd(e){\n        e.preventDefault();\n        props.onAdd(value);\n    }\n    function handleChange(e){\n        setValue(e.target.value)\n    }\n    return(\n        <form>\n            <input\n                type = 'text'\n                placeholder='Add Todo'\n                value={value}\n                onChange={handleChange}\n            />\n            <button onClick={handleAdd}>Add</button>\n        </form>\n    )\n}\n","import React,{useState, useEffect} from 'react'\nfunction ListItem(props){\n    const[checked, setChecked]=useState(false);\n    useEffect(()=>{\n        if(checked){\n            const timeoutHandle = setTimeout(props.onDelete,3000)\n            return ()=>{\n                clearTimeout(timeoutHandle);\n            }\n        }\n    },[checked])\n    function handleCheckChange(e){\n        //console.log(e)\n        setChecked(e.target.checked)\n    }\n    const style = checked ? {\n        textDecoration: 'line-through'\n    }:{};\n    return(\n        <div className='list__item'>\n            <input type='checkbox' onChange={handleCheckChange}/>\n            <span style={style}>{props.text}</span>\n        </div>\n    )\n}\nexport default function List(props){\n    return(\n        <div className='list'>\n            {props.items.map(item=>(\n                <ListItem key={item.id}\n                onDelete={props.onDelete.bind(null,item.id)}\n                text={item.text}\n                />\n            ))}\n        </div>    \n    )\n}\n","import React from 'react';\nimport {SafeAreaView, View, Text, StyleSheet} from 'react-native';\nimport '../css/header.css'\n\nconst Header = ({ onBack, title }) => (\n    <div id='titleBar'>        \n        <Text accessibilityRole=\"heading\" id='title'>{title}</Text>\n    </div>\n);\n\nconst styles = StyleSheet.create({\n    headerContainer: {\n    backgroundColor:'#333333',\n    width:'100vw',\n    height:'22px',\n    \n    },\n    header: {\n    padding: 10,\n    paddingVertical: 5,\n    alignItems: 'center',\n    flexDirection: 'row',\n    minHeight: 50\n    },\n    headerCenter: {\n    flex: 1,\n    order: 2\n    },\n    headerLeft: {\n    order: 1,\n    width: 80\n    },\n    headerRight: {\n    order: 3,\n    width: 80\n    },\n    title: {\n    fontSize: 19,\n    fontWeight: '600',\n    textAlign: 'center',\n    color: 'white'\n    },\n});\n\nexport default Header;\n","import React, {useReducer,useState,useEffect} from 'react'\nimport Form from './Form'\nimport List from './List'\nimport Header from './Header'\nvar i=1\n export default function Todo(props){\n\n  console.log(props.items)\n  const [items, setItems]=useState(props.items);\n\n  \n  useEffect(()=>{\n    props.itemsChanged(items);\n\n  },[items])\n  function handleOnAdd(value){\n    setItems([...items,\n        {\n          id:i++,\n          text:value\n        } \n      ])\n      \n    \n  }\n  function handleOnDelete(id){\n   \n    const index=items.findIndex((item)=>item.id===id);\n      if(index !== -1){\n        items.splice(index, 1)\n        setItems(\n          [\n            ...items\n          ]\n        )\n      }\n  }\n  \n   return(\n    <div className='todo'>\n      <Form onAdd = {handleOnAdd}/>\n      <List items = {items} onDelete={handleOnDelete}/>\n    </div>\n   )\n   \n  /*\n  return(\n    <div className='todo'>\n      <Header/>\n    </div>\n   )\n   */\n }","import React from 'react'\n\nconst Home = () => (\n  <div>\n    Home\n  </div>\n)\n\nexport default Home\n","import React from 'react'\n\nconst NoMatch = () => (\n  <div>\n    No Match\n  </div>\n)\n\nexport default NoMatch\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst NavBar = () => (\n  <div>\n    <div>\n      <Link id=\"linkHome\" to=\"/\">Home</Link><br/>\n      <Link id=\"linkTodo\" to=\"/todo\">todo</Link><br/>\n      <Link id=\"linkMap\" to=\"/map\">map</Link><br/>\n      <a id=\"linkhome\" href=\"/home\">login</a><br/>\n    </div>\n  </div>\n)\nexport default NavBar\n","import React from 'react'\nimport DeckGL from '@deck.gl/react'\nimport {LineLayer} from '@deck.gl/layers'\nimport {StaticMap} from 'react-map-gl'\n//var vari = require('../expressServer/keysconfig');\n//console.log(process.env.NODE_ENV)\n//console.log(\"MAPBOX : \"+process.env.MAPBOX_ACCESS_TOKEN)\n//const MAPBOX_ACCESS_TOKEN = vari.MAPBOX_ACCESS_TOKEN\n//const MAPBOX_ACCESS_TOKEN='pk.eyJ1IjoiYmdhbXV0IiwiYSI6ImNqd2hnMjAzdDFranI0M25wNnA1ZHEwanIifQ.cKnGSJ4UAFehcj43UU_lRA'\n//const MAPBOX_ACCESS_TOKEN = process.env.MAPBOX_ACCESS_TOKEN\n//const MAPBOX_ACCESS_TOKEN = \"MAPBOX_ACCESS_TOKEN_STRING\"\nlet MAPBOX_ACCESS_TOKEN=\"\"\nfetch('https://squwbs.herokuapp.com/mapboxtoken')\n.then(resulst=>{\n  return resulst.json()\n})\n.then((json)=>{\nMAPBOX_ACCESS_TOKEN=json.MAPBOX_ACCESS_TOKEN\nconsole.log(json)\n})\n.catch((err)=>{\n\n})\nconst initialViewState={\n    longitude: -122.41669,\n    latitude:37.7853,\n    zoom:13,\n    pitch:0,\n    bearing:0\n}\nconst data = [{sourcePosition:[-122.41669,37.7853],targetPosition:[-122.41669,37.781]}]\nexport default function Map (props){\n    const layers=[\n        new LineLayer({id:'line-layer',data})\n    ]\n\n    return(\n        <DeckGL \n            viewState={initialViewState} \n            controller={true}\n            layers={layers} >\n        <StaticMap mapboxApiAccessToken={MAPBOX_ACCESS_TOKEN}/>\n        </DeckGL>\n    )\n    // return(\n    //     <DeckGL \n    //         viewState={initialViewState} \n    //         controller={true}\n    //         layers={layers} >\n    //     <StaticMap mapboxApiAccessToken={props.mapbox_access_token}/>\n    //     </DeckGL>\n    // )\n    \n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","\n import React, {useReducer,useState} from 'react'\n import Todo from './components/Todo'\n import './App.css'\n import Header from './components/Header';\n import { BrowserRouter,HashRouter, Route, Link,Router,Switch } from \"react-router-dom\";\n //import{IndexRedirect} from \"react-router\"\n import Home from './components/Home'\n import NoMatch from './components/NoMatch'\n import NavBar from './components/NavBar'\n import Map from './components/Map'\n var i=1\n export default function App(props){\n\n    \n  const [state, setState]=useState(\n    {items:[],\n    }\n  )\n  function handleItems(items){\n    setState({items:[...items]})\n    console.log(state)\n  }\n      return (\n      <div>\n      <Header title = 'Reader'/>\n      <BrowserRouter>\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/todo\" render={()=><Todo itemsChanged={handleItems} items={state.items}/>}>\n          </Route>\n          <Route exact path=\"/map\" component={Map}/>\n          <Route component={NoMatch} />\n        </Switch>\n        <NavBar />\n      </BrowserRouter>\n    </div>\n      );\n    \n  }\n"],"sourceRoot":""}